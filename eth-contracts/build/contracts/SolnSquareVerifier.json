{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSolutionIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newSolutionAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setPauseState",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "solutionKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "solutionAddress",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSolutionIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newSolutionAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"solutionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"solutionAddress\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721MintableComplete.sol\":{\"keccak256\":\"0xc5ec2b1ec712bf81aefc0e11f3714932ace60f148f17223016ec392c7264ab3f\",\"urls\":[\"bzz-raw://9bbda9de3cf9f513d7e9f7102427a5fc93786d0450329c8ac05add6fa786bb5b\",\"dweb:/ipfs/QmQkwduidiWxm32QjnytzYvWGfJFqgR2BUUjeaaJ2zbbiK\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x0d2cc5ba592469777bd6e7b4f38ef0e67b2f7f515244114d2919dcc786c7b824\",\"urls\":[\"bzz-raw://d5f55b40a49d89b53e6850aae2bc7e90823c38fcb9ed9896ae0d85174c69d1e0\",\"dweb:/ipfs/QmdBnbx3fqfv711FTaNBrqaymKjESdo3pfGK1DVRLBX8zs\"]},\"project:/contracts/Verifier.sol\":{\"keccak256\":\"0x3308344e3cdb15dcc6a4895ac7e89787907e73ee1e0765bdc327d6d1c9a83be8\",\"urls\":[\"bzz-raw://8f1be64e5ee4775f966b7e88017e83b148466af41e21745ce7a47f58178bb319\",\"dweb:/ipfs/QmZ9wihLTHAdoTYVAwRvUqDCmnCwEZb1L1eDSZfxYf4TDU\"]}},\"version\":1}",
  "bytecode": "0x608060405260006015553480156200001657600080fd5b5060405162003fcd38038062003fcd83398181016040526200003c9190810190620003ca565b818181816040518060600160405280603f815260200162003f8e603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620000ec919062000463565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001266301ffc9a760e01b6200020860201b60201c565b6200013e6380ac58cd60e01b6200020860201b60201c565b6200015663780e9d6360e01b6200020860201b60201c565b82600f90805190602001906200016e929190620002a8565b50816010908051906020019062000187929190620002a8565b508060119080519060200190620001a0929190620002a8565b50620001b9635b5e139f60e01b6200020860201b60201c565b505050505082601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200055f565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200023c57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002eb57805160ff19168380011785556200031c565b828001600101855582156200031c579182015b828111156200031b578251825591602001919060010190620002fe565b5b5090506200032b91906200032f565b5090565b6200035491905b808211156200035057600081600090555060010162000336565b5090565b90565b600081519050620003688162000545565b92915050565b600082601f8301126200038057600080fd5b8151620003976200039182620004ae565b62000480565b91508082526020830160208301858383011115620003b457600080fd5b620003c18382846200050f565b50505092915050565b600080600060608486031215620003e057600080fd5b6000620003f08682870162000357565b935050602084015167ffffffffffffffff8111156200040e57600080fd5b6200041c868287016200036e565b925050604084015167ffffffffffffffff8111156200043a57600080fd5b62000448868287016200036e565b9150509250925092565b6200045d81620004db565b82525050565b60006020820190506200047a600083018462000452565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004a457600080fd5b8060405250919050565b600067ffffffffffffffff821115620004c657600080fd5b601f19601f8301169050602081019050919050565b6000620004e882620004ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200052f57808201518184015260208101905062000512565b838111156200053f576000848401525b50505050565b6200055081620004db565b81146200055c57600080fd5b50565b613a1f806200056f6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80634f6ccce7116100de578063b88d4fde11610097578063cdb88ad111610071578063cdb88ad11461046e578063d3aaceab1461048a578063e985e9c5146104a6578063f2fde38b146104d657610173565b8063b88d4fde14610404578063bdc32be014610420578063c87b56dd1461043e57610173565b80634f6ccce71461031e57806361d50f731461034e5780636352211e1461036a57806370a082311461039a578063893d20e8146103ca578063a22cb465146103e857610173565b806323b872dd1161013057806323b872dd1461024e57806327dc297e1461026a5780632f745c591461028657806338bbfa50146102b657806340c10f19146102d257806342842e0e1461030257610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806317d7de7c1461021257806318160ddd14610230575b600080fd5b610192600480360361018d9190810190612cc6565b6104f2565b60405161019f91906134c6565b60405180910390f35b6101c260048036036101bd9190810190612d18565b61055a565b6040516101cf9190613444565b60405180910390f35b6101f260048036036101ed9190810190612ac4565b610597565b005b6101fc610744565b60405161020991906134e1565b60405180910390f35b61021a6107e6565b60405161022791906134e1565b60405180910390f35b610238610888565b60405161024591906136ae565b60405180910390f35b610268600480360361026391908101906129be565b610895565b005b610284600480360361027f9190810190612bf3565b6108b8565b005b6102a0600480360361029b9190810190612ac4565b6108fb565b6040516102ad91906136ae565b60405180910390f35b6102d060048036036102cb9190810190612c47565b61096e565b005b6102ec60048036036102e79190810190612ac4565b610973565b6040516102f991906134c6565b60405180910390f35b61031c600480360361031791908101906129be565b610a78565b005b61033860048036036103339190810190612d18565b610a98565b60405161034591906136ae565b60405180910390f35b61036860048036036103639190810190612b00565b610acc565b005b610384600480360361037f9190810190612d18565b610ce6565b6040516103919190613444565b60405180910390f35b6103b460048036036103af9190810190612959565b610d23565b6040516103c191906136ae565b60405180910390f35b6103d2610d73565b6040516103df9190613444565b60405180910390f35b61040260048036036103fd9190810190612a88565b610d9c565b005b61041e60048036036104199190810190612a0d565b610ed2565b005b610428610ef8565b60405161043591906134e1565b60405180910390f35b61045860048036036104539190810190612d18565b610f9a565b60405161046591906134e1565b60405180910390f35b61048860048036036104839190810190612b65565b611061565b005b6104a4600480360361049f9190810190612bb7565b6111ba565b005b6104c060048036036104bb9190810190612982565b6112c7565b6040516104cd91906134c6565b60405180910390f35b6104f060048036036104eb9190810190612959565b61135b565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a282610ce6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a906135a3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610653575061065281336112c7565b5b610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906135e3565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b6000600880549050905090565b61089f83826114d4565b6108a857600080fd5b6108b3838383611569565b505050565b6108f7828260006040519080825280601f01601f1916602001820160405280156108f15781602001600182028038833980820191505090505b5061096e565b5050565b600061090683610d23565b821061091157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061095b57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90613623565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5190613603565b60405180910390fd5b610a64838361158d565b610a6d826115ae565b506001905092915050565b610a9383838360405180602001604052806000815250610ed2565b505050565b6000610aa2610888565b8210610aad57600080fd5b60088281548110610aba57fe5b90600052602060002001549050919050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610b1b97969594939291906133c3565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166014600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf90613543565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610c35929190613683565b60206040518083038186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c859190810190612b8e565b15610ca457610c9481336111ba565b610c9e8585610973565b50610cdf565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd690613563565b60405180910390fd5b5050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d6c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206116d0565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dd557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ec691906134c6565b60405180910390a35050565b610edd848484610895565b610ee9848484846116de565b610ef257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f905780601f10610f6557610100808354040283529160200191610f90565b820191906000526020600020905b815481529060010190602001808311610f7357829003601f168201915b5050505050905090565b6060610fa5826117f5565b610fae57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e790613623565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff1615151415611162577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051611155919061345f565b60405180910390a16111b7565b60001515600060149054906101000a900460ff16151514156111b6577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516111ad919061345f565b60405180910390a15b5b50565b6015546014600084815260200190815260200160002060000181905550806014600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d60146000848152602001908152602001600020600001546014600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516112a99291906136c9565b60405180910390a16015600081548092919060010191905055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190613623565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561145a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145190613583565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516114c99190613444565b60405180910390a150565b6000806114e083610ce6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061154f57508373ffffffffffffffffffffffffffffffffffffffff166115378461055a565b73ffffffffffffffffffffffffffffffffffffffff16145b80611560575061155f81856112c7565b5b91505092915050565b611574838383611867565b61157e8382611a96565b6115888282611c34565b505050565b6115978282611cfb565b6115a18282611c34565b6115aa81611f06565b5050565b60606115b9826117f5565b6115f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ef90613503565b60405180910390fd5b6116a460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116915780601f1061166657610100808354040283529160200191611691565b820191906000526020600020905b81548152906001019060200180831161167457829003601f168201915b505050505061169f84611f52565b61207f565b6012600084815260200190815260200160002090805190602001906116ca92919061256c565b50919050565b600081600001549050919050565b60006116ff8473ffffffffffffffffffffffffffffffffffffffff166120c3565b61170c57600190506117ed565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161174d949392919061347a565b602060405180830381600087803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061179f9190810190612cef565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b61187081610ce6565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d490613663565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561194d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194490613643565b60405180910390fd5b6119568161210e565b61199d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121cc565b6119e4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ef565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611aee6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061220590919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611bdb576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b5b57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bb357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c2d91906125ec565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9490613523565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e04906135c3565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ea6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ef565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611f9a576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061207a565b600082905060005b60008214611fc4578080600101915050600a8281611fbc57fe5b049150611fa2565b6060816040519080825280601f01601f191660200182016040528015611ff95781602001600182028038833980820191505090505b50905060006001830390505b6000861461207257600a868161201757fe5b0660300160f81b8282806001900393508151811061203157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161206a57fe5b049550612005565b819450505050505b919050565b60606120bb838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061224f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561210557506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121c95760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121e46001826000015461220590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061224783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612511565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122ab5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612330578881815181106122d757fe5b602001015160f81c60f81b8383806001019450815181106122f457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c2565b600090505b87518110156123a35787818151811061234a57fe5b602001015160f81c60f81b83838060010194508151811061236757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612335565b600090505b8651811015612416578681815181106123bd57fe5b602001015160f81c60f81b8383806001019450815181106123da57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123a8565b600090505b85518110156124895785818151811061243057fe5b602001015160f81c60f81b83838060010194508151811061244d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061241b565b600090505b84518110156124fc578481815181106124a357fe5b602001015160f81c60f81b8383806001019450815181106124c057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061248e565b82995050505050505050505095945050505050565b6000838311158290612559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255091906134e1565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125ad57805160ff19168380011785556125db565b828001600101855582156125db579182015b828111156125da5782518255916020019190600101906125bf565b5b5090506125e89190612618565b5090565b815481835581811115612613578183600052602060002091820191016126129190612618565b5b505050565b61263a91905b8082111561263657600081600090555060010161261e565b5090565b90565b60008135905061264c81613969565b92915050565b600082601f83011261266357600080fd5b60026126766126718261371f565b6136f2565b9150818385602084028201111561268c57600080fd5b60005b838110156126bc57816126a28882612944565b84526020840193506020830192505060018101905061268f565b5050505092915050565b600082601f8301126126d757600080fd5b60026126ea6126e582613741565b6136f2565b9150818385602084028201111561270057600080fd5b60005b8381101561273057816127168882612944565b845260208401935060208301925050600181019050612703565b5050505092915050565b60008135905061274981613980565b92915050565b60008151905061275e81613980565b92915050565b60008135905061277381613997565b92915050565b600081359050612788816139ae565b92915050565b60008151905061279d816139ae565b92915050565b600082601f8301126127b457600080fd5b81356127c76127c282613763565b6136f2565b915080825260208301602083018583830111156127e357600080fd5b6127ee83828461390c565b50505092915050565b600082601f83011261280857600080fd5b813561281b6128168261378f565b6136f2565b9150808252602083016020830185838301111561283757600080fd5b61284283828461390c565b50505092915050565b60006040828403121561285d57600080fd5b61286760406136f2565b9050600061287784828501612944565b600083015250602061288b84828501612944565b60208301525092915050565b6000608082840312156128a957600080fd5b6128b360406136f2565b905060006128c384828501612652565b60008301525060406128d784828501612652565b60208301525092915050565b600061010082840312156128f657600080fd5b61290060606136f2565b905060006129108482850161284b565b600083015250604061292484828501612897565b60208301525060c06129388482850161284b565b60408301525092915050565b600081359050612953816139c5565b92915050565b60006020828403121561296b57600080fd5b60006129798482850161263d565b91505092915050565b6000806040838503121561299557600080fd5b60006129a38582860161263d565b92505060206129b48582860161263d565b9150509250929050565b6000806000606084860312156129d357600080fd5b60006129e18682870161263d565b93505060206129f28682870161263d565b9250506040612a0386828701612944565b9150509250925092565b60008060008060808587031215612a2357600080fd5b6000612a318782880161263d565b9450506020612a428782880161263d565b9350506040612a5387828801612944565b925050606085013567ffffffffffffffff811115612a7057600080fd5b612a7c878288016127a3565b91505092959194509250565b60008060408385031215612a9b57600080fd5b6000612aa98582860161263d565b9250506020612aba8582860161273a565b9150509250929050565b60008060408385031215612ad757600080fd5b6000612ae58582860161263d565b9250506020612af685828601612944565b9150509250929050565b6000806000806101808587031215612b1757600080fd5b6000612b258782880161263d565b9450506020612b3687828801612944565b9350506040612b47878288016128e3565b925050610140612b59878288016126c6565b91505092959194509250565b600060208284031215612b7757600080fd5b6000612b858482850161273a565b91505092915050565b600060208284031215612ba057600080fd5b6000612bae8482850161274f565b91505092915050565b60008060408385031215612bca57600080fd5b6000612bd885828601612764565b9250506020612be98582860161263d565b9150509250929050565b60008060408385031215612c0657600080fd5b6000612c1485828601612764565b925050602083013567ffffffffffffffff811115612c3157600080fd5b612c3d858286016127f7565b9150509250929050565b600080600060608486031215612c5c57600080fd5b6000612c6a86828701612764565b935050602084013567ffffffffffffffff811115612c8757600080fd5b612c93868287016127f7565b925050604084013567ffffffffffffffff811115612cb057600080fd5b612cbc868287016127a3565b9150509250925092565b600060208284031215612cd857600080fd5b6000612ce684828501612779565b91505092915050565b600060208284031215612d0157600080fd5b6000612d0f8482850161278e565b91505092915050565b600060208284031215612d2a57600080fd5b6000612d3884828501612944565b91505092915050565b6000612d4d838361337f565b60208301905092915050565b6000612d65838361339d565b60208301905092915050565b612d7a816138d6565b82525050565b612d8981613858565b82525050565b612d98816137da565b612da28184613820565b9250612dad826137c5565b8060005b83811015612dde578151612dc58782612d41565b9650612dd083613808565b925050600181019050612db1565b505050505050565b612def816137da565b612df9818461382b565b9250612e04826137c5565b8060005b83811015612e35578151612e1c8782612d59565b9650612e2783613808565b925050600181019050612e08565b505050505050565b612e46816137cf565b612e508184613815565b9250612e5b826137bb565b8060005b83811015612e8c578151612e738782612d41565b9650612e7e836137fb565b925050600181019050612e5f565b505050505050565b612e9d816137cf565b612ea7818461382b565b9250612eb2826137bb565b8060005b83811015612ee3578151612eca8782612d59565b9650612ed5836137fb565b925050600181019050612eb6565b505050505050565b612ef48161386a565b82525050565b6000612f05826137e5565b612f0f8185613836565b9350612f1f81856020860161391b565b612f2881613958565b840191505092915050565b6000612f3e826137f0565b612f488185613847565b9350612f5881856020860161391b565b612f6181613958565b840191505092915050565b6000612f79601383613847565b91507f546f6b656e20646f65736e2774206578697374000000000000000000000000006000830152602082019050919050565b6000612fb9601383613847565b91507f546f6b656e20616c7265616479206578697374000000000000000000000000006000830152602082019050919050565b6000612ff9601583613847565b91507f536f6c7574696f6e20616c7265616479207573656400000000000000000000006000830152602082019050919050565b6000613039601583613847565b91507f50726f6f66207761736e277420766572696669656400000000000000000000006000830152602082019050919050565b6000613079602383613847565b91507f41646472657373206f66206e6577206f776e6572206e6f74207265636f676e6960008301527f7a656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130df602783613847565b91507f416464726573732063616e277420626520746865206f776e6572206f6620746860008301527f6520746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613145601983613847565b91507f496e76616c696420726563657069656e742061646472657373000000000000006000830152602082019050919050565b6000613185601583613847565b91507f53656e6465722069736e277420617070726f76656400000000000000000000006000830152602082019050919050565b60006131c5601283613847565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b6000613205601783613847565b91507f5265717565737465722069736e277420616c6c6f7765640000000000000000006000830152602082019050919050565b6000613245601c83613847565b91507f526563657069656e74206164647265737320697320696e76616c6964000000006000830152602082019050919050565b6000613285602383613847565b91507f53656e6465722069736e277420746865206f776e6572206f662074686520746f60008301527f6b656e00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516132f4600085018261337f565b506020820151613307602085018261337f565b50505050565b6080820160008201516133236000850182612e3d565b5060208201516133366040850182612e3d565b50505050565b6101008201600082015161335360008501826132de565b506020820151613366604085018261330d565b50604082015161337960c08501826132de565b50505050565b613388816138cc565b82525050565b613397816138cc565b82525050565b6133a6816138cc565b82525050565b6133bd6133b8826138cc565b61394e565b82525050565b60006133cf828a6133ac565b6020820191506133df82896133ac565b6020820191506133ef8288612e94565b6040820191506133ff8287612e94565b60408201915061340f82866133ac565b60208201915061341f82856133ac565b60208201915061342f8284612de6565b60408201915081905098975050505050505050565b60006020820190506134596000830184612d80565b92915050565b60006020820190506134746000830184612d71565b92915050565b600060808201905061348f6000830187612d71565b61349c6020830186612d80565b6134a9604083018561338e565b81810360608301526134bb8184612efa565b905095945050505050565b60006020820190506134db6000830184612eeb565b92915050565b600060208201905081810360008301526134fb8184612f33565b905092915050565b6000602082019050818103600083015261351c81612f6c565b9050919050565b6000602082019050818103600083015261353c81612fac565b9050919050565b6000602082019050818103600083015261355c81612fec565b9050919050565b6000602082019050818103600083015261357c8161302c565b9050919050565b6000602082019050818103600083015261359c8161306c565b9050919050565b600060208201905081810360008301526135bc816130d2565b9050919050565b600060208201905081810360008301526135dc81613138565b9050919050565b600060208201905081810360008301526135fc81613178565b9050919050565b6000602082019050818103600083015261361c816131b8565b9050919050565b6000602082019050818103600083015261363c816131f8565b9050919050565b6000602082019050818103600083015261365c81613238565b9050919050565b6000602082019050818103600083015261367c81613278565b9050919050565b600061014082019050613699600083018561333c565b6136a7610100830184612d8f565b9392505050565b60006020820190506136c3600083018461338e565b92915050565b60006040820190506136de600083018561338e565b6136eb6020830184612d80565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561371557600080fd5b8060405250919050565b600067ffffffffffffffff82111561373657600080fd5b602082029050919050565b600067ffffffffffffffff82111561375857600080fd5b602082029050919050565b600067ffffffffffffffff82111561377a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156137a657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613863826138ac565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138e1826138e8565b9050919050565b60006138f3826138fa565b9050919050565b6000613905826138ac565b9050919050565b82818337600083830152505050565b60005b8381101561393957808201518184015260208101905061391e565b83811115613948576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61397281613858565b811461397d57600080fd5b50565b6139898161386a565b811461399457600080fd5b50565b6139a081613876565b81146139ab57600080fd5b50565b6139b781613880565b81146139c257600080fd5b50565b6139ce816138cc565b81146139d957600080fd5b5056fea365627a7a7231582004d7a555a8c7bf0e13d6eb5d608d48d4383b64943821f8ae7c242dfe58ffc5b06c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80634f6ccce7116100de578063b88d4fde11610097578063cdb88ad111610071578063cdb88ad11461046e578063d3aaceab1461048a578063e985e9c5146104a6578063f2fde38b146104d657610173565b8063b88d4fde14610404578063bdc32be014610420578063c87b56dd1461043e57610173565b80634f6ccce71461031e57806361d50f731461034e5780636352211e1461036a57806370a082311461039a578063893d20e8146103ca578063a22cb465146103e857610173565b806323b872dd1161013057806323b872dd1461024e57806327dc297e1461026a5780632f745c591461028657806338bbfa50146102b657806340c10f19146102d257806342842e0e1461030257610173565b806301ffc9a714610178578063081812fc146101a8578063095ea7b3146101d857806315070401146101f457806317d7de7c1461021257806318160ddd14610230575b600080fd5b610192600480360361018d9190810190612cc6565b6104f2565b60405161019f91906134c6565b60405180910390f35b6101c260048036036101bd9190810190612d18565b61055a565b6040516101cf9190613444565b60405180910390f35b6101f260048036036101ed9190810190612ac4565b610597565b005b6101fc610744565b60405161020991906134e1565b60405180910390f35b61021a6107e6565b60405161022791906134e1565b60405180910390f35b610238610888565b60405161024591906136ae565b60405180910390f35b610268600480360361026391908101906129be565b610895565b005b610284600480360361027f9190810190612bf3565b6108b8565b005b6102a0600480360361029b9190810190612ac4565b6108fb565b6040516102ad91906136ae565b60405180910390f35b6102d060048036036102cb9190810190612c47565b61096e565b005b6102ec60048036036102e79190810190612ac4565b610973565b6040516102f991906134c6565b60405180910390f35b61031c600480360361031791908101906129be565b610a78565b005b61033860048036036103339190810190612d18565b610a98565b60405161034591906136ae565b60405180910390f35b61036860048036036103639190810190612b00565b610acc565b005b610384600480360361037f9190810190612d18565b610ce6565b6040516103919190613444565b60405180910390f35b6103b460048036036103af9190810190612959565b610d23565b6040516103c191906136ae565b60405180910390f35b6103d2610d73565b6040516103df9190613444565b60405180910390f35b61040260048036036103fd9190810190612a88565b610d9c565b005b61041e60048036036104199190810190612a0d565b610ed2565b005b610428610ef8565b60405161043591906134e1565b60405180910390f35b61045860048036036104539190810190612d18565b610f9a565b60405161046591906134e1565b60405180910390f35b61048860048036036104839190810190612b65565b611061565b005b6104a4600480360361049f9190810190612bb7565b6111ba565b005b6104c060048036036104bb9190810190612982565b6112c7565b6040516104cd91906134c6565b60405180910390f35b6104f060048036036104eb9190810190612959565b61135b565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a282610ce6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a906135a3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610653575061065281336112c7565b5b610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906135e3565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107dc5780601f106107b1576101008083540402835291602001916107dc565b820191906000526020600020905b8154815290600101906020018083116107bf57829003601f168201915b5050505050905090565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b6000600880549050905090565b61089f83826114d4565b6108a857600080fd5b6108b3838383611569565b505050565b6108f7828260006040519080825280601f01601f1916602001820160405280156108f15781602001600182028038833980820191505090505b5061096e565b5050565b600061090683610d23565b821061091157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061095b57fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90613623565b60405180910390fd5b60001515600060149054906101000a900460ff16151514610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5190613603565b60405180910390fd5b610a64838361158d565b610a6d826115ae565b506001905092915050565b610a9383838360405180602001604052806000815250610ed2565b505050565b6000610aa2610888565b8210610aad57600080fd5b60088281548110610aba57fe5b90600052602060002001549050919050565b600082600001516000015183600001516020015184602001516000015185602001516020015186604001516000015187604001516020015187604051602001610b1b97969594939291906133c3565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166014600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf90613543565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc84846040518363ffffffff1660e01b8152600401610c35929190613683565b60206040518083038186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c859190810190612b8e565b15610ca457610c9481336111ba565b610c9e8585610973565b50610cdf565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd690613563565b60405180910390fd5b5050505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d6c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206116d0565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dd557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ec691906134c6565b60405180910390a35050565b610edd848484610895565b610ee9848484846116de565b610ef257600080fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f905780601f10610f6557610100808354040283529160200191610f90565b820191906000526020600020905b815481529060010190602001808311610f7357829003601f168201915b5050505050905090565b6060610fa5826117f5565b610fae57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b50505050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e790613623565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff1615151415611162577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051611155919061345f565b60405180910390a16111b7565b60001515600060149054906101000a900460ff16151514156111b6577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516111ad919061345f565b60405180910390a15b5b50565b6015546014600084815260200190815260200160002060000181905550806014600084815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d60146000848152602001908152602001600020600001546014600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516112a99291906136c9565b60405180910390a16015600081548092919060010191905055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e190613623565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561145a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145190613583565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9736aeb40a8f30a5c076a9897428fdf7ec0e909c96dce63533664c9b5c835da6816040516114c99190613444565b60405180910390a150565b6000806114e083610ce6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061154f57508373ffffffffffffffffffffffffffffffffffffffff166115378461055a565b73ffffffffffffffffffffffffffffffffffffffff16145b80611560575061155f81856112c7565b5b91505092915050565b611574838383611867565b61157e8382611a96565b6115888282611c34565b505050565b6115978282611cfb565b6115a18282611c34565b6115aa81611f06565b5050565b60606115b9826117f5565b6115f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ef90613503565b60405180910390fd5b6116a460118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116915780601f1061166657610100808354040283529160200191611691565b820191906000526020600020905b81548152906001019060200180831161167457829003601f168201915b505050505061169f84611f52565b61207f565b6012600084815260200190815260200160002090805190602001906116ca92919061256c565b50919050565b600081600001549050919050565b60006116ff8473ffffffffffffffffffffffffffffffffffffffff166120c3565b61170c57600190506117ed565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161174d949392919061347a565b602060405180830381600087803b15801561176757600080fd5b505af115801561177b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061179f9190810190612cef565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b61187081610ce6565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d490613663565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561194d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194490613643565b60405180910390fd5b6119568161210e565b61199d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121cc565b6119e4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ef565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611aee6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061220590919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611bdb576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611b5b57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611bb357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611c2d91906125ec565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9490613523565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e04906135c3565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ea6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121ef565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415611f9a576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061207a565b600082905060005b60008214611fc4578080600101915050600a8281611fbc57fe5b049150611fa2565b6060816040519080825280601f01601f191660200182016040528015611ff95781602001600182028038833980820191505090505b50905060006001830390505b6000861461207257600a868161201757fe5b0660300160f81b8282806001900393508151811061203157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161206a57fe5b049550612005565b819450505050505b919050565b60606120bb838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061224f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561210557506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121c95760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6121e46001826000015461220590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061224783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612511565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122ab5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612330578881815181106122d757fe5b602001015160f81c60f81b8383806001019450815181106122f457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122c2565b600090505b87518110156123a35787818151811061234a57fe5b602001015160f81c60f81b83838060010194508151811061236757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612335565b600090505b8651811015612416578681815181106123bd57fe5b602001015160f81c60f81b8383806001019450815181106123da57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123a8565b600090505b85518110156124895785818151811061243057fe5b602001015160f81c60f81b83838060010194508151811061244d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061241b565b600090505b84518110156124fc578481815181106124a357fe5b602001015160f81c60f81b8383806001019450815181106124c057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061248e565b82995050505050505050505095945050505050565b6000838311158290612559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255091906134e1565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125ad57805160ff19168380011785556125db565b828001600101855582156125db579182015b828111156125da5782518255916020019190600101906125bf565b5b5090506125e89190612618565b5090565b815481835581811115612613578183600052602060002091820191016126129190612618565b5b505050565b61263a91905b8082111561263657600081600090555060010161261e565b5090565b90565b60008135905061264c81613969565b92915050565b600082601f83011261266357600080fd5b60026126766126718261371f565b6136f2565b9150818385602084028201111561268c57600080fd5b60005b838110156126bc57816126a28882612944565b84526020840193506020830192505060018101905061268f565b5050505092915050565b600082601f8301126126d757600080fd5b60026126ea6126e582613741565b6136f2565b9150818385602084028201111561270057600080fd5b60005b8381101561273057816127168882612944565b845260208401935060208301925050600181019050612703565b5050505092915050565b60008135905061274981613980565b92915050565b60008151905061275e81613980565b92915050565b60008135905061277381613997565b92915050565b600081359050612788816139ae565b92915050565b60008151905061279d816139ae565b92915050565b600082601f8301126127b457600080fd5b81356127c76127c282613763565b6136f2565b915080825260208301602083018583830111156127e357600080fd5b6127ee83828461390c565b50505092915050565b600082601f83011261280857600080fd5b813561281b6128168261378f565b6136f2565b9150808252602083016020830185838301111561283757600080fd5b61284283828461390c565b50505092915050565b60006040828403121561285d57600080fd5b61286760406136f2565b9050600061287784828501612944565b600083015250602061288b84828501612944565b60208301525092915050565b6000608082840312156128a957600080fd5b6128b360406136f2565b905060006128c384828501612652565b60008301525060406128d784828501612652565b60208301525092915050565b600061010082840312156128f657600080fd5b61290060606136f2565b905060006129108482850161284b565b600083015250604061292484828501612897565b60208301525060c06129388482850161284b565b60408301525092915050565b600081359050612953816139c5565b92915050565b60006020828403121561296b57600080fd5b60006129798482850161263d565b91505092915050565b6000806040838503121561299557600080fd5b60006129a38582860161263d565b92505060206129b48582860161263d565b9150509250929050565b6000806000606084860312156129d357600080fd5b60006129e18682870161263d565b93505060206129f28682870161263d565b9250506040612a0386828701612944565b9150509250925092565b60008060008060808587031215612a2357600080fd5b6000612a318782880161263d565b9450506020612a428782880161263d565b9350506040612a5387828801612944565b925050606085013567ffffffffffffffff811115612a7057600080fd5b612a7c878288016127a3565b91505092959194509250565b60008060408385031215612a9b57600080fd5b6000612aa98582860161263d565b9250506020612aba8582860161273a565b9150509250929050565b60008060408385031215612ad757600080fd5b6000612ae58582860161263d565b9250506020612af685828601612944565b9150509250929050565b6000806000806101808587031215612b1757600080fd5b6000612b258782880161263d565b9450506020612b3687828801612944565b9350506040612b47878288016128e3565b925050610140612b59878288016126c6565b91505092959194509250565b600060208284031215612b7757600080fd5b6000612b858482850161273a565b91505092915050565b600060208284031215612ba057600080fd5b6000612bae8482850161274f565b91505092915050565b60008060408385031215612bca57600080fd5b6000612bd885828601612764565b9250506020612be98582860161263d565b9150509250929050565b60008060408385031215612c0657600080fd5b6000612c1485828601612764565b925050602083013567ffffffffffffffff811115612c3157600080fd5b612c3d858286016127f7565b9150509250929050565b600080600060608486031215612c5c57600080fd5b6000612c6a86828701612764565b935050602084013567ffffffffffffffff811115612c8757600080fd5b612c93868287016127f7565b925050604084013567ffffffffffffffff811115612cb057600080fd5b612cbc868287016127a3565b9150509250925092565b600060208284031215612cd857600080fd5b6000612ce684828501612779565b91505092915050565b600060208284031215612d0157600080fd5b6000612d0f8482850161278e565b91505092915050565b600060208284031215612d2a57600080fd5b6000612d3884828501612944565b91505092915050565b6000612d4d838361337f565b60208301905092915050565b6000612d65838361339d565b60208301905092915050565b612d7a816138d6565b82525050565b612d8981613858565b82525050565b612d98816137da565b612da28184613820565b9250612dad826137c5565b8060005b83811015612dde578151612dc58782612d41565b9650612dd083613808565b925050600181019050612db1565b505050505050565b612def816137da565b612df9818461382b565b9250612e04826137c5565b8060005b83811015612e35578151612e1c8782612d59565b9650612e2783613808565b925050600181019050612e08565b505050505050565b612e46816137cf565b612e508184613815565b9250612e5b826137bb565b8060005b83811015612e8c578151612e738782612d41565b9650612e7e836137fb565b925050600181019050612e5f565b505050505050565b612e9d816137cf565b612ea7818461382b565b9250612eb2826137bb565b8060005b83811015612ee3578151612eca8782612d59565b9650612ed5836137fb565b925050600181019050612eb6565b505050505050565b612ef48161386a565b82525050565b6000612f05826137e5565b612f0f8185613836565b9350612f1f81856020860161391b565b612f2881613958565b840191505092915050565b6000612f3e826137f0565b612f488185613847565b9350612f5881856020860161391b565b612f6181613958565b840191505092915050565b6000612f79601383613847565b91507f546f6b656e20646f65736e2774206578697374000000000000000000000000006000830152602082019050919050565b6000612fb9601383613847565b91507f546f6b656e20616c7265616479206578697374000000000000000000000000006000830152602082019050919050565b6000612ff9601583613847565b91507f536f6c7574696f6e20616c7265616479207573656400000000000000000000006000830152602082019050919050565b6000613039601583613847565b91507f50726f6f66207761736e277420766572696669656400000000000000000000006000830152602082019050919050565b6000613079602383613847565b91507f41646472657373206f66206e6577206f776e6572206e6f74207265636f676e6960008301527f7a656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006130df602783613847565b91507f416464726573732063616e277420626520746865206f776e6572206f6620746860008301527f6520746f6b656e000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613145601983613847565b91507f496e76616c696420726563657069656e742061646472657373000000000000006000830152602082019050919050565b6000613185601583613847565b91507f53656e6465722069736e277420617070726f76656400000000000000000000006000830152602082019050919050565b60006131c5601283613847565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b6000613205601783613847565b91507f5265717565737465722069736e277420616c6c6f7765640000000000000000006000830152602082019050919050565b6000613245601c83613847565b91507f526563657069656e74206164647265737320697320696e76616c6964000000006000830152602082019050919050565b6000613285602383613847565b91507f53656e6465722069736e277420746865206f776e6572206f662074686520746f60008301527f6b656e00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516132f4600085018261337f565b506020820151613307602085018261337f565b50505050565b6080820160008201516133236000850182612e3d565b5060208201516133366040850182612e3d565b50505050565b6101008201600082015161335360008501826132de565b506020820151613366604085018261330d565b50604082015161337960c08501826132de565b50505050565b613388816138cc565b82525050565b613397816138cc565b82525050565b6133a6816138cc565b82525050565b6133bd6133b8826138cc565b61394e565b82525050565b60006133cf828a6133ac565b6020820191506133df82896133ac565b6020820191506133ef8288612e94565b6040820191506133ff8287612e94565b60408201915061340f82866133ac565b60208201915061341f82856133ac565b60208201915061342f8284612de6565b60408201915081905098975050505050505050565b60006020820190506134596000830184612d80565b92915050565b60006020820190506134746000830184612d71565b92915050565b600060808201905061348f6000830187612d71565b61349c6020830186612d80565b6134a9604083018561338e565b81810360608301526134bb8184612efa565b905095945050505050565b60006020820190506134db6000830184612eeb565b92915050565b600060208201905081810360008301526134fb8184612f33565b905092915050565b6000602082019050818103600083015261351c81612f6c565b9050919050565b6000602082019050818103600083015261353c81612fac565b9050919050565b6000602082019050818103600083015261355c81612fec565b9050919050565b6000602082019050818103600083015261357c8161302c565b9050919050565b6000602082019050818103600083015261359c8161306c565b9050919050565b600060208201905081810360008301526135bc816130d2565b9050919050565b600060208201905081810360008301526135dc81613138565b9050919050565b600060208201905081810360008301526135fc81613178565b9050919050565b6000602082019050818103600083015261361c816131b8565b9050919050565b6000602082019050818103600083015261363c816131f8565b9050919050565b6000602082019050818103600083015261365c81613238565b9050919050565b6000602082019050818103600083015261367c81613278565b9050919050565b600061014082019050613699600083018561333c565b6136a7610100830184612d8f565b9392505050565b60006020820190506136c3600083018461338e565b92915050565b60006040820190506136de600083018561338e565b6136eb6020830184612d80565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561371557600080fd5b8060405250919050565b600067ffffffffffffffff82111561373657600080fd5b602082029050919050565b600067ffffffffffffffff82111561375857600080fd5b602082029050919050565b600067ffffffffffffffff82111561377a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156137a657600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613863826138ac565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138e1826138e8565b9050919050565b60006138f3826138fa565b9050919050565b6000613905826138ac565b9050919050565b82818337600083830152505050565b60005b8381101561393957808201518184015260208101905061391e565b83811115613948576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61397281613858565b811461397d57600080fd5b50565b6139898161386a565b811461399457600080fd5b50565b6139a081613876565b81146139ab57600080fd5b50565b6139b781613880565b81146139c257600080fd5b50565b6139ce816138cc565b81146139d957600080fd5b5056fea365627a7a7231582004d7a555a8c7bf0e13d6eb5d608d48d4383b64943821f8ae7c242dfe58ffc5b06c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "468:1995:6:-;;;945:1;921:25;;1178:176;8:9:-1;5:2;;;30:1;27;20:12;5:2;1178:176:6;;;;;;;;;;;;;;;;;;;;;;;;1280:4;1286:6;22369:4:4;22375:6;20118:284;;;;;;;;;;;;;;;;;997:10;988:6;;:19;;;;;;;;;;;;;;;;;;1022:27;1042:6;;;;;;;;;;;1022:27;;;;;;;;;;;;;;;2426:5;2416:7;;:15;;;;;;;;;;;;;;;;;;3121:40;2718:10;3140:20;;3121:18;;;:40;;:::i;:::-;5267;5141:10;5286:20;;5267:18;;;:40;;:::i;:::-;12823:51;12429:10;12842:31;;12823:18;;;:51;;:::i;:::-;20267:4;20259:5;:12;;;;;;;;;;;;:::i;:::-;;20291:6;20281:7;:16;;;;;;;;;;;;:::i;:::-;;20323:12;20307:13;:28;;;;;;;;;;;;:::i;:::-;;20346:49;19929:10;20365:29;;20346:18;;;:49;;:::i;:::-;20118:284;;;22300:169;;1331:15:6;1311:8;;:36;;;;;;;;;;;;;;;;;;1178:176;;;468:1995;;3471:158:4;3561:10;3546:25;;:11;:25;;;;;3538:34;;;;;;3618:4;3582:20;:33;3603:11;3582:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3471:158;:::o;468:1995:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:1;836:64;892:7;883:6;872:9;868:22;836:64;;;826:74;;798:108;958:2;947:9;943:18;937:25;982:18;974:6;971:30;968:2;;;1014:1;1011;1004:12;968:2;1034:74;1100:7;1091:6;1080:9;1076:22;1034:74;;;1024:84;;916:198;1166:2;1155:9;1151:18;1145:25;1190:18;1182:6;1179:30;1176:2;;;1222:1;1219;1212:12;1176:2;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;;;1232:84;;1124:198;730:602;;;;;;1339:113;1422:24;1440:5;1422:24;;;1417:3;1410:37;1404:48;;;1459:213;;1577:2;1566:9;1562:18;1554:26;;1591:71;1659:1;1648:9;1644:17;1635:6;1591:71;;;1548:124;;;;;1679:256;;1741:2;1735:9;1725:19;;1779:4;1771:6;1767:17;1878:6;1866:10;1863:22;1842:18;1830:10;1827:34;1824:62;1821:2;;;1899:1;1896;1889:12;1821:2;1919:10;1915:2;1908:22;1719:216;;;;;1942:322;;2086:18;2078:6;2075:30;2072:2;;;2118:1;2115;2108:12;2072:2;2185:4;2181:9;2174:4;2166:6;2162:17;2158:33;2150:41;;2249:4;2243;2239:15;2231:23;;2009:255;;;;2271:91;;2333:24;2351:5;2333:24;;;2322:35;;2316:46;;;;2369:121;;2442:42;2435:5;2431:54;2420:65;;2414:76;;;;2498:268;2563:1;2570:101;2584:6;2581:1;2578:13;2570:101;;;2660:1;2655:3;2651:11;2645:18;2641:1;2636:3;2632:11;2625:39;2606:2;2603:1;2599:10;2594:15;;2570:101;;;2686:6;2683:1;2680:13;2677:2;;;2751:1;2742:6;2737:3;2733:16;2726:27;2677:2;2547:219;;;;;2774:117;2843:24;2861:5;2843:24;;;2836:5;2833:35;2823:2;;2882:1;2879;2872:12;2823:2;2817:74;;468:1995:6;;;;;;;",
  "deployedSourceMap": "468:1995:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:1995:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6514:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5846:662;;;;;;;;;;;;;;;;:::i;:::-;;20582:90;;;:::i;:::-;;;;;;;;;;;;;;;;20490:86;;;:::i;:::-;;;;;;;;;;;;;;;;13588:94;;;:::i;:::-;;;;;;;;;;;;;;;;7658:174;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;13254:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;22475:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7838:132;;;;;;;;;;;;;;;;:::i;:::-;;14019:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1928:533:6;;;;;;;;;;;;;;;;:::i;:::-;;5611:162:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5320:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;869:80;;;:::i;:::-;;;;;;;;;;;;;;;;6973:213;;;;;;;;;;;;;;;;:::i;:::-;;7976:211;;;;;;;;;;;;;;;;:::i;:::-;;20678:102;;;:::i;:::-;;;;;;;;;;;;;;;;20786:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2131:246;;;;;;;;;;;;;;;;:::i;:::-;;1360:341:6;;;;;;;;;;;;;;;;:::i;:::-;;7507:145:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1173:361;;;;;;;;;;;;;;;;:::i;:::-;;3259:133;3329:4;3352:20;:33;3373:11;3352:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3345:40;;3259:133;;;:::o;6514:167::-;6573:7;6650:15;:24;6666:7;6650:24;;;;;;;;;;;;;;;;;;;;;6643:31;;6514:167;;;:::o;5846:662::-;5995:18;6016:16;6024:7;6016;:16::i;:::-;5995:37;;6056:10;6050:16;;:2;:16;;;;6042:68;;;;;;;;;;;;;;;;;;;;;;6246:10;6232:24;;:10;:24;;;:68;;;;6260:40;6277:10;6289;6260:16;:40::i;:::-;6232:68;6224:102;;;;;;;;;;;;;;;;;;;;;;6415:2;6388:15;:24;6404:7;6388:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6493:7;6489:2;6468:33;;6477:10;6468:33;;;;;;;;;;;;5846:662;;;:::o;20582:90::-;20626:13;20658:7;20651:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20582:90;:::o;20490:86::-;20532:13;20564:5;20557:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20490:86;:::o;13588:94::-;13632:7;13658:10;:17;;;;13651:24;;13588:94;:::o;7658:174::-;7748:33;7767:4;7773:7;7748:18;:33::i;:::-;7740:42;;;;;;7793:32;7807:4;7813:2;7817:7;7793:13;:32::i;:::-;7658:174;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13254:182:4:-;13334:7;13369:16;13379:5;13369:9;:16::i;:::-;13361:5;:24;13353:33;;;;;;13403:12;:19;13416:5;13403:19;;;;;;;;;;;;;;;13423:5;13403:26;;;;;;;;;;;;;;;;13396:33;;13254:182;;;;:::o;14929:166:5:-;;;;:::o;22475:182:4:-;22558:4;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:56;;;;;;;;;;;;;;;;;;;;;;2498:5;2487:16;;:7;;;;;;;;;;;:16;;;2479:47;;;;;;;;;;;;;;;;;;;;;;22574:24;22586:2;22590:7;22574:11;:24::i;:::-;22608:20;22620:7;22608:11;:20::i;:::-;;22646:4;22639:11;;22475:182;;;;:::o;7838:132::-;7924:39;7941:4;7947:2;7951:7;7924:39;;;;;;;;;;;;:16;:39::i;:::-;7838:132;;;:::o;14019:148::-;14077:7;14112:13;:11;:13::i;:::-;14104:5;:21;14096:30;;;;;;14143:10;14154:5;14143:17;;;;;;;;;;;;;;;;14136:24;;14019:148;;;:::o;1928:533:6:-;2039:19;2088:5;:7;;;:9;;;2099:5;:7;;;:9;;;2110:5;:7;;;:9;;;2121:5;:7;;;:9;;;2132:5;:7;;;:9;;;2143:5;:7;;;:9;;;2154:5;2071:89;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2071:89:6;;;2061:100;;;;;;2039:122;;2229:3;2179:54;;:9;:22;2189:11;2179:22;;;;;;;;;;;:38;;;;;;;;;;;;:54;;;2171:88;;;;;;;;;;;;;;;;;;;;;;2282:8;;;;;;;;;;;:17;;;2300:5;2307;2282:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2282:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2282:31:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2282:31:6;;;;;;;;;2278:166;;;2329:36;2341:11;2354:10;2329:11;:36::i;:::-;2379:17;2384:2;2388:7;2379:4;:17::i;:::-;;2278:166;;;2413:31;;;;;;;;;;;;;;;;;;;2278:166;1928:533;;;;;:::o;5611:162:4:-;5666:7;5746:11;:20;5758:7;5746:20;;;;;;;;;;;;;;;;;;;;;5739:27;;5611:162;;;:::o;5320:285::-;5375:7;5564:34;:17;:24;5582:5;5564:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5557:41;;5320:285;;;:::o;869:80::-;910:7;936:6;;;;;;;;;;;929:13;;869:80;:::o;6973:213::-;7058:10;7052:16;;:2;:16;;;;7044:25;;;;;;7116:8;7079:18;:30;7098:10;7079:30;;;;;;;;;;;;;;;:34;7110:2;7079:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7166:2;7139:40;;7154:10;7139:40;;;7170:8;7139:40;;;;;;;;;;;;;;;6973:213;;:::o;7976:211::-;8082:31;8095:4;8101:2;8105:7;8082:12;:31::i;:::-;8131:48;8154:4;8160:2;8164:7;8173:5;8131:22;:48::i;:::-;8123:57;;;;;;7976:211;;;;:::o;20678:102::-;20728:13;20760;20753:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20678:102;:::o;20786:151::-;20844:13;20877:16;20885:7;20877;:16::i;:::-;20869:25;;;;;;20911:10;:19;20922:7;20911:19;;;;;;;;;;;20904:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20786:151;;;:::o;2131:246::-;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:56;;;;;;;;;;;;;;;;;;;;;;2206:8;2196:7;;:18;;;;;;;;;;;;;;;;;;2239:4;2228:15;;:7;;;;;;;;;;;:15;;;2224:147;;;2264:18;2271:10;2264:18;;;;;;;;;;;;;;;2224:147;;;2314:5;2303:16;;:7;;;;;;;;;;;:16;;;2299:72;;;2340:20;2349:10;2340:20;;;;;;;;;;;;;;;2299:72;2224:147;2131:246;:::o;1360:341:6:-;1483:13;;1444:9;:22;1454:11;1444:22;;;;;;;;;;;:36;;:52;;;;1547:15;1506:9;:22;1516:11;1506:22;;;;;;;;;;;:38;;;:56;;;;;;;;;;;;;;;;;;1578:91;1592:9;:22;1602:11;1592:22;;;;;;;;;;;:36;;;1630:9;:22;1640:11;1630:22;;;;;;;;;;;:38;;;;;;;;;;;;1578:91;;;;;;;;;;;;;;;;1679:13;;:15;;;;;;;;;;;;;1360:341;;:::o;7507:145:4:-;7587:4;7610:18;:25;7629:5;7610:25;;;;;;;;;;;;;;;:35;7636:8;7610:35;;;;;;;;;;;;;;;;;;;;;;;;;7603:42;;7507:145;;;;:::o;1173:361::-;1115:6;;;;;;;;;;;1101:20;;:10;:20;;;1093:56;;;;;;;;;;;;;;;;;;;;;;1411:3;1391:24;;:8;:24;;;;1383:72;;;;;;;;;;;;;;;;;;;;;;1474:8;1465:6;;:17;;;;;;;;;;;;;;;;;;1498:29;1518:8;1498:29;;;;;;;;;;;;;;;1173:361;:::o;8893:246::-;8978:4;8994:13;9010:16;9018:7;9010;:16::i;:::-;8994:32;;9055:5;9044:16;;:7;:16;;;:51;;;;9088:7;9064:31;;:20;9076:7;9064:11;:20::i;:::-;:31;;;9044:51;:87;;;;9099:32;9116:5;9123:7;9099:16;:32::i;:::-;9044:87;9036:96;;;8893:246;;;;:::o;14542:239::-;14627:38;14647:4;14653:2;14657:7;14627:19;:38::i;:::-;14676:47;14709:4;14715:7;14676:32;:47::i;:::-;14734:40;14762:2;14766:7;14734:27;:40::i;:::-;14542:239;;;:::o;15036:196::-;15099:24;15111:2;15115:7;15099:11;:24::i;:::-;15134:40;15162:2;15166:7;15134:27;:40::i;:::-;15185;15217:7;15185:31;:40::i;:::-;15036:196;;:::o;21414:212::-;21470:13;21503:16;21511:7;21503;:16::i;:::-;21495:48;;;;;;;;;;;;;;;;;;;;;;21576:43;21586:13;21576:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21601:17;21610:7;21601:8;:17::i;:::-;21576:9;:43::i;:::-;21554:10;:19;21565:7;21554:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21414:212;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11274:347:4:-;11395:4;11420:15;:2;:13;;;:15::i;:::-;11415:58;;11458:4;11451:11;;;;11415:58;11483:13;11515:2;11499:36;;;11536:10;11548:4;11554:7;11563:5;11499:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11499:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11499:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11499:70:4;;;;;;;;;11483:86;;4274:10;11597:16;;11587:26;;;:6;:26;;;;11579:35;;;11274:347;;;;;;;:::o;8381:152::-;8438:4;8454:13;8470:11;:20;8482:7;8470:20;;;;;;;;;;;;;;;;;;;;;8454:36;;8524:1;8507:19;;:5;:19;;;;8500:26;;;8381:152;;;:::o;10029:717::-;10201:16;10209:7;10201;:16::i;:::-;10193:24;;:4;:24;;;10185:72;;;;;;;;;;;;;;;;;;;;;;10358:3;10344:18;;:2;:18;;;;10336:59;;;;;;;;;;;;;;;;;;;;;;10438:23;10453:7;10438:14;:23::i;:::-;10547:35;:17;:23;10565:4;10547:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10592:33;:17;:21;10610:2;10592:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10658:2;10635:11;:20;10647:7;10635:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10731:7;10727:2;10712:27;;10721:4;10712:27;;;;;;;;;;;;10029:717;;;:::o;17008:1128::-;17270:22;17295:32;17325:1;17295:12;:18;17308:4;17295:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17270:57;;17337:18;17358:17;:26;17376:7;17358:26;;;;;;;;;;;;17337:47;;17502:14;17488:10;:28;17484:323;;17532:19;17554:12;:18;17567:4;17554:18;;;;;;;;;;;;;;;17573:14;17554:34;;;;;;;;;;;;;;;;17532:56;;17636:11;17603:12;:18;17616:4;17603:18;;;;;;;;;;;;;;;17622:10;17603:30;;;;;;;;;;;;;;;:44;;;;17752:10;17719:17;:30;17737:11;17719:30;;;;;;;;;;;:43;;;;17484:323;;17893:12;:18;17906:4;17893:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17008:1128;;;;:::o;15854:183::-;15967:12;:16;15980:2;15967:16;;;;;;;;;;;;;;;:23;;;;15938:17;:26;15956:7;15938:26;;;;;;;;;;;:52;;;;16000:12;:16;16013:2;16000:16;;;;;;;;;;;;;;;16022:7;16000:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16000:30:4;;;;;;;;;;;;;;;;;;;;;;15854:183;;:::o;9296:534::-;9483:3;9451:36;;:11;:20;9463:7;9451:20;;;;;;;;;;;;;;;;;;;;;:36;;;9443:68;;;;;;;;;;;;;;;;;;;;;;9543:3;9529:18;;:2;:18;;;;9521:56;;;;;;;;;;;;;;;;;;;;;;9691:2;9668:11;:20;9680:7;9668:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9703:33;:17;:21;9721:2;9703:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9815:7;9811:2;9788:35;;9805:3;9788:35;;;;;;;;;;;;9296:534;;:::o;16232:161::-;16335:10;:17;;;;16308:15;:24;16324:7;16308:24;;;;;;;;;;;:44;;;;16362:10;16378:7;16362:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16362:24:4;;;;;;;;;;;;;;;;;;;;;;16232:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;11702:171:4:-;11801:1;11765:38;;:15;:24;11781:7;11765:24;;;;;;;;;;;;;;;;;;;;;:38;;;11761:106;;11854:1;11819:15;:24;11835:7;11819:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11761:106;11702:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;468:1995:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4049:666;;4161:6;4149:9;4144:3;4140:19;4136:32;4133:2;;;4181:1;4178;4171:12;4133:2;4199:20;4214:4;4199:20;;;4190:29;;4266:1;4298:70;4364:3;4355:6;4344:9;4340:22;4298:70;;;4291:4;4284:5;4280:16;4273:96;4229:151;4427:2;4460:70;4526:3;4517:6;4506:9;4502:22;4460:70;;;4453:4;4446:5;4442:16;4435:96;4390:152;4589:3;4623:70;4689:3;4680:6;4669:9;4665:22;4623:70;;;4616:4;4609:5;4605:16;4598:96;4552:153;4127:588;;;;;4722:130;;4802:6;4789:20;4780:29;;4814:33;4841:5;4814:33;;;4774:78;;;;;4859:241;;4963:2;4951:9;4942:7;4938:23;4934:32;4931:2;;;4979:1;4976;4969:12;4931:2;5014:1;5031:53;5076:7;5067:6;5056:9;5052:22;5031:53;;;5021:63;;4993:97;4925:175;;;;;5107:366;;;5228:2;5216:9;5207:7;5203:23;5199:32;5196:2;;;5244:1;5241;5234:12;5196:2;5279:1;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;;;5286:63;;5258:97;5386:2;5404:53;5449:7;5440:6;5429:9;5425:22;5404:53;;;5394:63;;5365:98;5190:283;;;;;;5480:491;;;;5618:2;5606:9;5597:7;5593:23;5589:32;5586:2;;;5634:1;5631;5624:12;5586:2;5669:1;5686:53;5731:7;5722:6;5711:9;5707:22;5686:53;;;5676:63;;5648:97;5776:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;;;5784:63;;5755:98;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5580:391;;;;;;5978:721;;;;;6142:3;6130:9;6121:7;6117:23;6113:33;6110:2;;;6159:1;6156;6149:12;6110:2;6194:1;6211:53;6256:7;6247:6;6236:9;6232:22;6211:53;;;6201:63;;6173:97;6301:2;6319:53;6364:7;6355:6;6344:9;6340:22;6319:53;;;6309:63;;6280:98;6409:2;6427:53;6472:7;6463:6;6452:9;6448:22;6427:53;;;6417:63;;6388:98;6545:2;6534:9;6530:18;6517:32;6569:18;6561:6;6558:30;6555:2;;;6601:1;6598;6591:12;6555:2;6621:62;6675:7;6666:6;6655:9;6651:22;6621:62;;;6611:72;;6496:193;6104:595;;;;;;;;6706:360;;;6824:2;6812:9;6803:7;6799:23;6795:32;6792:2;;;6840:1;6837;6830:12;6792:2;6875:1;6892:53;6937:7;6928:6;6917:9;6913:22;6892:53;;;6882:63;;6854:97;6982:2;7000:50;7042:7;7033:6;7022:9;7018:22;7000:50;;;6990:60;;6961:95;6786:280;;;;;;7073:366;;;7194:2;7182:9;7173:7;7169:23;7165:32;7162:2;;;7210:1;7207;7200:12;7162:2;7245:1;7262:53;7307:7;7298:6;7287:9;7283:22;7262:53;;;7252:63;;7224:97;7352:2;7370:53;7415:7;7406:6;7395:9;7391:22;7370:53;;;7360:63;;7331:98;7156:283;;;;;;7446:710;;;;;7647:3;7635:9;7626:7;7622:23;7618:33;7615:2;;;7664:1;7661;7654:12;7615:2;7699:1;7716:53;7761:7;7752:6;7741:9;7737:22;7716:53;;;7706:63;;7678:97;7806:2;7824:53;7869:7;7860:6;7849:9;7845:22;7824:53;;;7814:63;;7785:98;7914:2;7932:76;8000:7;7991:6;7980:9;7976:22;7932:76;;;7922:86;;7893:121;8045:3;8064:76;8132:7;8123:6;8112:9;8108:22;8064:76;;;8054:86;;8024:122;7609:547;;;;;;;;8163:235;;8264:2;8252:9;8243:7;8239:23;8235:32;8232:2;;;8280:1;8277;8270:12;8232:2;8315:1;8332:50;8374:7;8365:6;8354:9;8350:22;8332:50;;;8322:60;;8294:94;8226:172;;;;;8405:257;;8517:2;8505:9;8496:7;8492:23;8488:32;8485:2;;;8533:1;8530;8523:12;8485:2;8568:1;8585:61;8638:7;8629:6;8618:9;8614:22;8585:61;;;8575:71;;8547:105;8479:183;;;;;8669:366;;;8790:2;8778:9;8769:7;8765:23;8761:32;8758:2;;;8806:1;8803;8796:12;8758:2;8841:1;8858:53;8903:7;8894:6;8883:9;8879:22;8858:53;;;8848:63;;8820:97;8948:2;8966:53;9011:7;9002:6;8991:9;8987:22;8966:53;;;8956:63;;8927:98;8752:283;;;;;;9042:472;;;9173:2;9161:9;9152:7;9148:23;9144:32;9141:2;;;9189:1;9186;9179:12;9141:2;9224:1;9241:53;9286:7;9277:6;9266:9;9262:22;9241:53;;;9231:63;;9203:97;9359:2;9348:9;9344:18;9331:32;9383:18;9375:6;9372:30;9369:2;;;9415:1;9412;9405:12;9369:2;9435:63;9490:7;9481:6;9470:9;9466:22;9435:63;;;9425:73;;9310:194;9135:379;;;;;;9521:701;;;;9678:2;9666:9;9657:7;9653:23;9649:32;9646:2;;;9694:1;9691;9684:12;9646:2;9729:1;9746:53;9791:7;9782:6;9771:9;9767:22;9746:53;;;9736:63;;9708:97;9864:2;9853:9;9849:18;9836:32;9888:18;9880:6;9877:30;9874:2;;;9920:1;9917;9910:12;9874:2;9940:63;9995:7;9986:6;9975:9;9971:22;9940:63;;;9930:73;;9815:194;10068:2;10057:9;10053:18;10040:32;10092:18;10084:6;10081:30;10078:2;;;10124:1;10121;10114:12;10078:2;10144:62;10198:7;10189:6;10178:9;10174:22;10144:62;;;10134:72;;10019:193;9640:582;;;;;;10229:239;;10332:2;10320:9;10311:7;10307:23;10303:32;10300:2;;;10348:1;10345;10338:12;10300:2;10383:1;10400:52;10444:7;10435:6;10424:9;10420:22;10400:52;;;10390:62;;10362:96;10294:174;;;;;10475:261;;10589:2;10577:9;10568:7;10564:23;10560:32;10557:2;;;10605:1;10602;10595:12;10557:2;10640:1;10657:63;10712:7;10703:6;10692:9;10688:22;10657:63;;;10647:73;;10619:107;10551:185;;;;;10743:241;;10847:2;10835:9;10826:7;10822:23;10818:32;10815:2;;;10863:1;10860;10853:12;10815:2;10898:1;10915:53;10960:7;10951:6;10940:9;10936:22;10915:53;;;10905:63;;10877:97;10809:175;;;;;10992:173;;11079:46;11121:3;11113:6;11079:46;;;11154:4;11149:3;11145:14;11131:28;;11072:93;;;;;11174:189;;11269:54;11319:3;11311:6;11269:54;;;11352:4;11347:3;11343:14;11329:28;;11262:101;;;;;11371:142;11462:45;11501:5;11462:45;;;11457:3;11450:58;11444:69;;;11520:113;11603:24;11621:5;11603:24;;;11598:3;11591:37;11585:48;;;11673:660;11806:52;11852:5;11806:52;;;11871:84;11948:6;11943:3;11871:84;;;11864:91;;11976:54;12024:5;11976:54;;;12050:7;12078:1;12063:258;12088:6;12085:1;12082:13;12063:258;;;12155:6;12149:13;12176:63;12235:3;12220:13;12176:63;;;12169:70;;12256:58;12307:6;12256:58;;;12246:68;;12120:201;12110:1;12107;12103:9;12098:14;;12063:258;;;12067:14;11785:548;;;;;;12374:704;12525:52;12571:5;12525:52;;;12590:102;12685:6;12680:3;12590:102;;;12583:109;;12713:54;12761:5;12713:54;;;12787:7;12815:1;12800:266;12825:6;12822:1;12819:13;12800:266;;;12892:6;12886:13;12913:71;12980:3;12965:13;12913:71;;;12906:78;;13001:58;13052:6;13001:58;;;12991:68;;12857:209;12847:1;12844;12840:9;12835:14;;12800:266;;;12804:14;12504:574;;;;;;13119:624;13238:48;13280:5;13238:48;;;13299:74;13366:6;13361:3;13299:74;;;13292:81;;13394:50;13438:5;13394:50;;;13464:7;13492:1;13477:254;13502:6;13499:1;13496:13;13477:254;;;13569:6;13563:13;13590:63;13649:3;13634:13;13590:63;;;13583:70;;13670:54;13717:6;13670:54;;;13660:64;;13534:197;13524:1;13521;13517:9;13512:14;;13477:254;;;13481:14;13217:526;;;;;;13784:688;13931:48;13973:5;13931:48;;;13992:102;14087:6;14082:3;13992:102;;;13985:109;;14115:50;14159:5;14115:50;;;14185:7;14213:1;14198:262;14223:6;14220:1;14217:13;14198:262;;;14290:6;14284:13;14311:71;14378:3;14363:13;14311:71;;;14304:78;;14399:54;14446:6;14399:54;;;14389:64;;14255:205;14245:1;14242;14238:9;14233:14;;14198:262;;;14202:14;13910:562;;;;;;14480:104;14557:21;14572:5;14557:21;;;14552:3;14545:34;14539:45;;;14591:343;;14701:38;14733:5;14701:38;;;14751:70;14814:6;14809:3;14751:70;;;14744:77;;14826:52;14871:6;14866:3;14859:4;14852:5;14848:16;14826:52;;;14899:29;14921:6;14899:29;;;14894:3;14890:39;14883:46;;14681:253;;;;;;14941:347;;15053:39;15086:5;15053:39;;;15104:71;15168:6;15163:3;15104:71;;;15097:78;;15180:52;15225:6;15220:3;15213:4;15206:5;15202:16;15180:52;;;15253:29;15275:6;15253:29;;;15248:3;15244:39;15237:46;;15033:255;;;;;;15296:319;;15456:67;15520:2;15515:3;15456:67;;;15449:74;;15556:21;15552:1;15547:3;15543:11;15536:42;15606:2;15601:3;15597:12;15590:19;;15442:173;;;;15624:319;;15784:67;15848:2;15843:3;15784:67;;;15777:74;;15884:21;15880:1;15875:3;15871:11;15864:42;15934:2;15929:3;15925:12;15918:19;;15770:173;;;;15952:321;;16112:67;16176:2;16171:3;16112:67;;;16105:74;;16212:23;16208:1;16203:3;16199:11;16192:44;16264:2;16259:3;16255:12;16248:19;;16098:175;;;;16282:321;;16442:67;16506:2;16501:3;16442:67;;;16435:74;;16542:23;16538:1;16533:3;16529:11;16522:44;16594:2;16589:3;16585:12;16578:19;;16428:175;;;;16612:372;;16772:67;16836:2;16831:3;16772:67;;;16765:74;;16872:34;16868:1;16863:3;16859:11;16852:55;16941:5;16936:2;16931:3;16927:12;16920:27;16975:2;16970:3;16966:12;16959:19;;16758:226;;;;16993:376;;17153:67;17217:2;17212:3;17153:67;;;17146:74;;17253:34;17249:1;17244:3;17240:11;17233:55;17322:9;17317:2;17312:3;17308:12;17301:31;17360:2;17355:3;17351:12;17344:19;;17139:230;;;;17378:325;;17538:67;17602:2;17597:3;17538:67;;;17531:74;;17638:27;17634:1;17629:3;17625:11;17618:48;17694:2;17689:3;17685:12;17678:19;;17524:179;;;;17712:321;;17872:67;17936:2;17931:3;17872:67;;;17865:74;;17972:23;17968:1;17963:3;17959:11;17952:44;18024:2;18019:3;18015:12;18008:19;;17858:175;;;;18042:318;;18202:67;18266:2;18261:3;18202:67;;;18195:74;;18302:20;18298:1;18293:3;18289:11;18282:41;18351:2;18346:3;18342:12;18335:19;;18188:172;;;;18369:323;;18529:67;18593:2;18588:3;18529:67;;;18522:74;;18629:25;18625:1;18620:3;18616:11;18609:46;18683:2;18678:3;18674:12;18667:19;;18515:177;;;;18701:328;;18861:67;18925:2;18920:3;18861:67;;;18854:74;;18961:30;18957:1;18952:3;18948:11;18941:51;19020:2;19015:3;19011:12;19004:19;;18847:182;;;;19038:372;;19198:67;19262:2;19257:3;19198:67;;;19191:74;;19298:34;19294:1;19289:3;19285:11;19278:55;19367:5;19362:2;19357:3;19353:12;19346:27;19401:2;19396:3;19392:12;19385:19;;19184:226;;;;19473:456;19602:4;19597:3;19593:14;19682:4;19675:5;19671:16;19665:23;19694:63;19751:4;19746:3;19742:14;19728:12;19694:63;;;19622:141;19833:4;19826:5;19822:16;19816:23;19845:63;19902:4;19897:3;19893:14;19879:12;19845:63;;;19773:141;19575:354;;;;19991:540;20120:4;20115:3;20111:14;20200:4;20193:5;20189:16;20183:23;20212:105;20311:4;20306:3;20302:14;20288:12;20212:105;;;20140:183;20393:4;20386:5;20382:16;20376:23;20405:105;20504:4;20499:3;20495:14;20481:12;20405:105;;;20333:183;20093:438;;;;20591:757;20730:6;20725:3;20721:16;20812:4;20805:5;20801:16;20795:23;20824:109;20927:4;20922:3;20918:14;20904:12;20824:109;;;20752:187;21009:4;21002:5;20998:16;20992:23;21021:109;21124:4;21119:3;21115:14;21101:12;21021:109;;;20949:187;21206:4;21199:5;21195:16;21189:23;21218:109;21321:4;21316:3;21312:14;21298:12;21218:109;;;21146:187;20703:645;;;;21355:103;21428:24;21446:5;21428:24;;;21423:3;21416:37;21410:48;;;21465:113;21548:24;21566:5;21548:24;;;21543:3;21536:37;21530:48;;;21585:111;21666:24;21684:5;21666:24;;;21661:3;21654:37;21648:48;;;21703:152;21804:45;21824:24;21842:5;21824:24;;;21804:45;;;21799:3;21792:58;21786:69;;;21862:1338;;22279:75;22350:3;22341:6;22279:75;;;22376:2;22371:3;22367:12;22360:19;;22390:75;22461:3;22452:6;22390:75;;;22487:2;22482:3;22478:12;22471:19;;22501:117;22614:3;22605:6;22501:117;;;22640:2;22635:3;22631:12;22624:19;;22654:117;22767:3;22758:6;22654:117;;;22793:2;22788:3;22784:12;22777:19;;22807:75;22878:3;22869:6;22807:75;;;22904:2;22899:3;22895:12;22888:19;;22918:75;22989:3;22980:6;22918:75;;;23015:2;23010:3;23006:12;22999:19;;23029:121;23146:3;23137:6;23029:121;;;23172:2;23167:3;23163:12;23156:19;;23192:3;23185:10;;22267:933;;;;;;;;;;;23207:213;;23325:2;23314:9;23310:18;23302:26;;23339:71;23407:1;23396:9;23392:17;23383:6;23339:71;;;23296:124;;;;;23427:229;;23553:2;23542:9;23538:18;23530:26;;23567:79;23643:1;23632:9;23628:17;23619:6;23567:79;;;23524:132;;;;;23663:647;;23891:3;23880:9;23876:19;23868:27;;23906:79;23982:1;23971:9;23967:17;23958:6;23906:79;;;23996:72;24064:2;24053:9;24049:18;24040:6;23996:72;;;24079;24147:2;24136:9;24132:18;24123:6;24079:72;;;24199:9;24193:4;24189:20;24184:2;24173:9;24169:18;24162:48;24224:76;24295:4;24286:6;24224:76;;;24216:84;;23862:448;;;;;;;;24317:201;;24429:2;24418:9;24414:18;24406:26;;24443:65;24505:1;24494:9;24490:17;24481:6;24443:65;;;24400:118;;;;;24525:301;;24663:2;24652:9;24648:18;24640:26;;24713:9;24707:4;24703:20;24699:1;24688:9;24684:17;24677:47;24738:78;24811:4;24802:6;24738:78;;;24730:86;;24634:192;;;;;24833:407;;25024:2;25013:9;25009:18;25001:26;;25074:9;25068:4;25064:20;25060:1;25049:9;25045:17;25038:47;25099:131;25225:4;25099:131;;;25091:139;;24995:245;;;;25247:407;;25438:2;25427:9;25423:18;25415:26;;25488:9;25482:4;25478:20;25474:1;25463:9;25459:17;25452:47;25513:131;25639:4;25513:131;;;25505:139;;25409:245;;;;25661:407;;25852:2;25841:9;25837:18;25829:26;;25902:9;25896:4;25892:20;25888:1;25877:9;25873:17;25866:47;25927:131;26053:4;25927:131;;;25919:139;;25823:245;;;;26075:407;;26266:2;26255:9;26251:18;26243:26;;26316:9;26310:4;26306:20;26302:1;26291:9;26287:17;26280:47;26341:131;26467:4;26341:131;;;26333:139;;26237:245;;;;26489:407;;26680:2;26669:9;26665:18;26657:26;;26730:9;26724:4;26720:20;26716:1;26705:9;26701:17;26694:47;26755:131;26881:4;26755:131;;;26747:139;;26651:245;;;;26903:407;;27094:2;27083:9;27079:18;27071:26;;27144:9;27138:4;27134:20;27130:1;27119:9;27115:17;27108:47;27169:131;27295:4;27169:131;;;27161:139;;27065:245;;;;27317:407;;27508:2;27497:9;27493:18;27485:26;;27558:9;27552:4;27548:20;27544:1;27533:9;27529:17;27522:47;27583:131;27709:4;27583:131;;;27575:139;;27479:245;;;;27731:407;;27922:2;27911:9;27907:18;27899:26;;27972:9;27966:4;27962:20;27958:1;27947:9;27943:17;27936:47;27997:131;28123:4;27997:131;;;27989:139;;27893:245;;;;28145:407;;28336:2;28325:9;28321:18;28313:26;;28386:9;28380:4;28376:20;28372:1;28361:9;28357:17;28350:47;28411:131;28537:4;28411:131;;;28403:139;;28307:245;;;;28559:407;;28750:2;28739:9;28735:18;28727:26;;28800:9;28794:4;28790:20;28786:1;28775:9;28771:17;28764:47;28825:131;28951:4;28825:131;;;28817:139;;28721:245;;;;28973:407;;29164:2;29153:9;29149:18;29141:26;;29214:9;29208:4;29204:20;29200:1;29189:9;29185:17;29178:47;29239:131;29365:4;29239:131;;;29231:139;;29135:245;;;;29387:407;;29578:2;29567:9;29563:18;29555:26;;29628:9;29622:4;29618:20;29614:1;29603:9;29599:17;29592:47;29653:131;29779:4;29653:131;;;29645:139;;29549:245;;;;29801:510;;30039:3;30028:9;30024:19;30016:27;;30054:117;30168:1;30157:9;30153:17;30144:6;30054:117;;;30182:119;30296:3;30285:9;30281:19;30272:6;30182:119;;;30010:301;;;;;;30318:213;;30436:2;30425:9;30421:18;30413:26;;30450:71;30518:1;30507:9;30503:17;30494:6;30450:71;;;30407:124;;;;;30538:324;;30684:2;30673:9;30669:18;30661:26;;30698:71;30766:1;30755:9;30751:17;30742:6;30698:71;;;30780:72;30848:2;30837:9;30833:18;30824:6;30780:72;;;30655:207;;;;;;30869:256;;30931:2;30925:9;30915:19;;30969:4;30961:6;30957:17;31068:6;31056:10;31053:22;31032:18;31020:10;31017:34;31014:62;31011:2;;;31089:1;31086;31079:12;31011:2;31109:10;31105:2;31098:22;30909:216;;;;;31132:240;;31285:18;31277:6;31274:30;31271:2;;;31317:1;31314;31307:12;31271:2;31352:4;31344:6;31340:17;31332:25;;31208:164;;;;31379:244;;31536:18;31528:6;31525:30;31522:2;;;31568:1;31565;31558:12;31522:2;31603:4;31595:6;31591:17;31583:25;;31459:164;;;;31630:321;;31773:18;31765:6;31762:30;31759:2;;;31805:1;31802;31795:12;31759:2;31872:4;31868:9;31861:4;31853:6;31849:17;31845:33;31837:41;;31936:4;31930;31926:15;31918:23;;31696:255;;;;31958:322;;32102:18;32094:6;32091:30;32088:2;;;32134:1;32131;32124:12;32088:2;32201:4;32197:9;32190:4;32182:6;32178:17;32174:33;32166:41;;32265:4;32259;32255:15;32247:23;;32025:255;;;;32287:93;;32367:3;32359:11;;32353:27;;;;32387:97;;32471:3;32463:11;;32457:27;;;;32491:104;;32581:4;32571:14;;32559:36;;;;32602:108;;32696:4;32686:14;;32674:36;;;;32717:121;;32810:5;32804:12;32794:22;;32775:63;;;;32845:122;;32939:5;32933:12;32923:22;;32904:63;;;;32974:102;;33066:4;33061:3;33057:14;33049:22;;33043:33;;;;33083:106;;33179:4;33174:3;33170:14;33162:22;;33156:33;;;;33197:130;;33318:3;33303:18;;33296:31;;;;;33336:140;;33467:3;33452:18;;33445:31;;;;;33485:158;;33634:3;33619:18;;33612:31;;;;;33652:162;;33766:6;33761:3;33754:19;33803:4;33798:3;33794:14;33779:29;;33747:67;;;;;33823:163;;33938:6;33933:3;33926:19;33975:4;33970:3;33966:14;33951:29;;33919:67;;;;;33994:91;;34056:24;34074:5;34056:24;;;34045:35;;34039:46;;;;34092:85;;34165:5;34158:13;34151:21;34140:32;;34134:43;;;;34184:72;;34246:5;34235:16;;34229:27;;;;34263:144;;34335:66;34328:5;34324:78;34313:89;;34307:100;;;;34414:121;;34487:42;34480:5;34476:54;34465:65;;34459:76;;;;34542:72;;34604:5;34593:16;;34587:27;;;;34621:129;;34708:37;34739:5;34708:37;;;34695:50;;34689:61;;;;34757:121;;34836:37;34867:5;34836:37;;;34823:50;;34817:61;;;;34885:108;;34964:24;34982:5;34964:24;;;34951:37;;34945:48;;;;35001:145;35082:6;35077:3;35072;35059:30;35138:1;35129:6;35124:3;35120:16;35113:27;35052:94;;;;35155:268;35220:1;35227:101;35241:6;35238:1;35235:13;35227:101;;;35317:1;35312:3;35308:11;35302:18;35298:1;35293:3;35289:11;35282:39;35263:2;35260:1;35256:10;35251:15;;35227:101;;;35343:6;35340:1;35337:13;35334:2;;;35408:1;35399:6;35394:3;35390:16;35383:27;35334:2;35204:219;;;;;35431:74;;35495:5;35484:16;;35478:27;;;;35512:97;;35600:2;35596:7;35591:2;35584:5;35580:14;35576:28;35566:38;;35560:49;;;;35617:117;35686:24;35704:5;35686:24;;;35679:5;35676:35;35666:2;;35725:1;35722;35715:12;35666:2;35660:74;;35741:111;35807:21;35822:5;35807:21;;;35800:5;35797:32;35787:2;;35843:1;35840;35833:12;35787:2;35781:71;;35859:117;35928:24;35946:5;35928:24;;;35921:5;35918:35;35908:2;;35967:1;35964;35957:12;35908:2;35902:74;;35983:115;36051:23;36068:5;36051:23;;;36044:5;36041:34;36031:2;;36089:1;36086;36079:12;36031:2;36025:73;;36105:117;36174:24;36192:5;36174:24;;;36167:5;36164:35;36154:2;;36213:1;36210;36203:12;36154:2;36148:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./Verifier.sol\";\nimport \"./ERC721MintableComplete.sol\";\n\n// contract Verifier {\n//     function verifyTx(Proof memory proof, uint[2] memory input) public view returns (bool r);\n// }\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721MintableComplete {\n    Verifier private verifier;\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 solutionIndex;\n        address solutionAddress;\n    }\n\n    // TODO define an array of the above struct\n    // Solution[] private solution;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) solutions;\n    uint256 solutionTotal = 0;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256 newSolutionIndex, address newSolutionAddress);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n\n    constructor(address verifierAddress, string memory name, string memory symbol) ERC721MintableComplete(name, symbol) public {\n        verifier = Verifier(verifierAddress);\n    }\n\n    function addSolution(bytes32 solutionKey, address solutionAddress) public {\n        solutions[solutionKey].solutionIndex = solutionTotal;\n        solutions[solutionKey].solutionAddress = solutionAddress;\n\n        emit SolutionAdded(solutions[solutionKey].solutionIndex, solutions[solutionKey].solutionAddress);\n        solutionTotal++;\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(address to, uint256 tokenId, Verifier.Proof memory proof, uint[2] memory input) public {\n        bytes32 solutionKey = keccak256(abi.encodePacked(proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y, input));\n        require(solutions[solutionKey].solutionAddress == address(0x0), \"Solution already used\");\n        \n        if (verifier.verifyTx(proof, input)) {\n            addSolution(solutionKey, msg.sender);\n            mint(to, tokenId);\n        } else revert(\"Proof wasn't verified\");\n        \n\n    }\n}",
  "sourcePath": "/Users/jay/dev/dapp-housing-nft/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7887
      ]
    },
    "id": 7888,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7730,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7731,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7732,
        "nodeType": "ImportDirective",
        "scope": 7888,
        "sourceUnit": 8810,
        "src": "175:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721MintableComplete.sol",
        "file": "./ERC721MintableComplete.sol",
        "id": 7733,
        "nodeType": "ImportDirective",
        "scope": 7888,
        "sourceUnit": 1461,
        "src": "200:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7734,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1460,
              "src": "499:22:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1460",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7735,
            "nodeType": "InheritanceSpecifier",
            "src": "499:22:6"
          }
        ],
        "contractDependencies": [
          398,
          473,
          519,
          1007,
          1305,
          1417,
          1460,
          7728
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7887,
        "linearizedBaseContracts": [
          7887,
          1460,
          1417,
          7728,
          1305,
          1007,
          519,
          473,
          398
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7737,
            "name": "verifier",
            "nodeType": "VariableDeclaration",
            "scope": 7887,
            "src": "528:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8809",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7736,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8809,
              "src": "528:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8809",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7742,
            "members": [
              {
                "constant": false,
                "id": 7739,
                "name": "solutionIndex",
                "nodeType": "VariableDeclaration",
                "scope": 7742,
                "src": "660:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7738,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "660:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7741,
                "name": "solutionAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7742,
                "src": "691:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7740,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7887,
            "src": "634:87:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7746,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7887,
            "src": "877:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7745,
              "keyType": {
                "id": 7743,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "885:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "877:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7744,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7742,
                "src": "896:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7742_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7749,
            "name": "solutionTotal",
            "nodeType": "VariableDeclaration",
            "scope": 7887,
            "src": "921:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7747,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "921:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7748,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "945:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7755,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7751,
                  "indexed": false,
                  "name": "newSolutionIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 7755,
                  "src": "1034:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7753,
                  "indexed": false,
                  "name": "newSolutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7755,
                  "src": "1060:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:54:6"
            },
            "src": "1014:74:6"
          },
          {
            "body": {
              "id": 7774,
              "nodeType": "Block",
              "src": "1301:53:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7768,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7737,
                      "src": "1311:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8809",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7770,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7757,
                          "src": "1331:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7769,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8809,
                        "src": "1322:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8809_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1322:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8809",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "1311:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8809",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7773,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 7775,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7764,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7759,
                    "src": "1280:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7765,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7761,
                    "src": "1286:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7766,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7763,
                  "name": "ERC721MintableComplete",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1460,
                  "src": "1257:22:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721MintableComplete_$1460_$",
                    "typeString": "type(contract ERC721MintableComplete)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1257:36:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7757,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1190:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7759,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1215:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7758,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7761,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1235:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:67:6"
            },
            "returnParameters": {
              "id": 7767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:6"
            },
            "scope": 7887,
            "src": "1178:176:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7810,
              "nodeType": "Block",
              "src": "1434:267:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7782,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7746,
                          "src": "1444:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7784,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7783,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7777,
                          "src": "1454:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1444:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7742_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7739,
                      "src": "1444:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7786,
                      "name": "solutionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7749,
                      "src": "1483:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1444:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:52:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7789,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7746,
                          "src": "1506:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7791,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7790,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7777,
                          "src": "1516:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1506:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7742_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7792,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7741,
                      "src": "1506:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7793,
                      "name": "solutionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7779,
                      "src": "1547:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1506:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7795,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:56:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7797,
                            "name": "solutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7746,
                            "src": "1592:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7799,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7798,
                            "name": "solutionKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7777,
                            "src": "1602:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1592:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7742_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "solutionIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7739,
                        "src": "1592:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7801,
                            "name": "solutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7746,
                            "src": "1630:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7803,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7802,
                            "name": "solutionKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7777,
                            "src": "1640:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1630:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7742_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "solutionAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7741,
                        "src": "1630:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7796,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7755,
                      "src": "1578:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:91:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7806,
                  "nodeType": "EmitStatement",
                  "src": "1573:96:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1679:15:6",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 7807,
                      "name": "solutionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7749,
                      "src": "1679:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7809,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:15:6"
                }
              ]
            },
            "documentation": null,
            "id": 7811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7777,
                  "name": "solutionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1381:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7779,
                  "name": "solutionAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7811,
                  "src": "1402:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:46:6"
            },
            "returnParameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:6"
            },
            "scope": 7887,
            "src": "1360:341:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7885,
              "nodeType": "Block",
              "src": "2029:432:6",
              "statements": [
                {
                  "assignments": [
                    7825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7825,
                      "name": "solutionKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 7885,
                      "src": "2039:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7824,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2039:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7850,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7829,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2088:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8478,
                              "src": "2088:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7895_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7831,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7892,
                            "src": "2088:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7832,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2099:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7833,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8478,
                              "src": "2099:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7895_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7834,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7894,
                            "src": "2099:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7835,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2110:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7836,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8480,
                              "src": "2110:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7904_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7899,
                            "src": "2110:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7838,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2121:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7839,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8480,
                              "src": "2121:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7904_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7903,
                            "src": "2121:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7841,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2132:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7842,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8482,
                              "src": "2132:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7895_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7892,
                            "src": "2132:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7844,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7817,
                                "src": "2143:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7845,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8482,
                              "src": "2143:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7895_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7846,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7894,
                            "src": "2143:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7847,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7821,
                            "src": "2154:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7827,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8811,
                            "src": "2071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2071:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2071:89:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7826,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8818,
                      "src": "2061:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:100:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2039:122:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7852,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7746,
                              "src": "2179:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7742_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7854,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7853,
                              "name": "solutionKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "2189:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2179:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7742_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7855,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "solutionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7741,
                          "src": "2179:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 7857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2229:3:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2221:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2221:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2179:54:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c72656164792075736564",
                        "id": 7860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2235:23:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_498956fa9670977d71824a1dd58600dae343a9fd8526784b1daad7a0fab9cf8f",
                          "typeString": "literal_string \"Solution already used\""
                        },
                        "value": "Solution already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_498956fa9670977d71824a1dd58600dae343a9fd8526784b1daad7a0fab9cf8f",
                          "typeString": "literal_string \"Solution already used\""
                        }
                      ],
                      "id": 7851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8827,
                        8828
                      ],
                      "referencedDeclaration": 8828,
                      "src": "2171:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:88:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7862,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:88:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7865,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7817,
                        "src": "2300:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7866,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7821,
                        "src": "2307:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                          "typeString": "struct Verifier.Proof memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7863,
                        "name": "verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7737,
                        "src": "2282:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verifier_$8809",
                          "typeString": "contract Verifier"
                        }
                      },
                      "id": 7864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyTx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8808,
                      "src": "2282:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8483_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                      }
                    },
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "50726f6f66207761736e2774207665726966696564",
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2420:23:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4e668642965b9d582ea460f29c12bdbb5d65fe58c2cabbeb6244cd04115db366",
                            "typeString": "literal_string \"Proof wasn't verified\""
                          },
                          "value": "Proof wasn't verified"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_4e668642965b9d582ea460f29c12bdbb5d65fe58c2cabbeb6244cd04115db366",
                            "typeString": "literal_string \"Proof wasn't verified\""
                          }
                        ],
                        "id": 7880,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          8829,
                          8830
                        ],
                        "referencedDeclaration": 8830,
                        "src": "2413:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 7882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2413:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 7883,
                    "nodeType": "ExpressionStatement",
                    "src": "2413:31:6"
                  },
                  "id": 7884,
                  "nodeType": "IfStatement",
                  "src": "2278:166:6",
                  "trueBody": {
                    "id": 7879,
                    "nodeType": "Block",
                    "src": "2315:92:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7869,
                              "name": "solutionKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "2341:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7870,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8824,
                                "src": "2354:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2354:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 7868,
                            "name": "addSolution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7811,
                            "src": "2329:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 7872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2329:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7873,
                        "nodeType": "ExpressionStatement",
                        "src": "2329:36:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7875,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7813,
                              "src": "2384:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 7876,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7815,
                              "src": "2388:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7874,
                            "name": "mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7886,
                              1459
                            ],
                            "referencedDeclaration": 1459,
                            "src": "2379:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 7877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2379:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7878,
                        "nodeType": "ExpressionStatement",
                        "src": "2379:17:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 7886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1942:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7815,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1954:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7817,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1971:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7816,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8483,
                    "src": "1971:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8483_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7821,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "2000:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7818,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2000:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7820,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2005:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2000:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1941:80:6"
            },
            "returnParameters": {
              "id": 7823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2029:0:6"
            },
            "scope": 7887,
            "src": "1928:533:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7888,
        "src": "468:1995:6"
      }
    ],
    "src": "0:2463:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7887
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7730,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7731,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 8810,
          "absolutePath": "project:/contracts/Verifier.sol",
          "file": "./Verifier.sol",
          "scope": 7888,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7732,
        "name": "ImportDirective",
        "src": "175:24:6"
      },
      {
        "attributes": {
          "SourceUnit": 1461,
          "absolutePath": "project:/contracts/ERC721MintableComplete.sol",
          "file": "./ERC721MintableComplete.sol",
          "scope": 7888,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7733,
        "name": "ImportDirective",
        "src": "200:38:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            398,
            473,
            519,
            1007,
            1305,
            1417,
            1460,
            7728
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7887,
            1460,
            1417,
            7728,
            1305,
            1007,
            519,
            473,
            398
          ],
          "name": "SolnSquareVerifier",
          "scope": 7888
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1460,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7734,
                "name": "UserDefinedTypeName",
                "src": "499:22:6"
              }
            ],
            "id": 7735,
            "name": "InheritanceSpecifier",
            "src": "499:22:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifier",
              "scope": 7887,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 8809,
                  "type": "contract Verifier"
                },
                "id": 7736,
                "name": "UserDefinedTypeName",
                "src": "528:8:6"
              }
            ],
            "id": 7737,
            "name": "VariableDeclaration",
            "src": "528:25:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7887,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "solutionIndex",
                  "scope": 7742,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7738,
                    "name": "ElementaryTypeName",
                    "src": "660:7:6"
                  }
                ],
                "id": 7739,
                "name": "VariableDeclaration",
                "src": "660:21:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "solutionAddress",
                  "scope": 7742,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7740,
                    "name": "ElementaryTypeName",
                    "src": "691:7:6"
                  }
                ],
                "id": 7741,
                "name": "VariableDeclaration",
                "src": "691:23:6"
              }
            ],
            "id": 7742,
            "name": "StructDefinition",
            "src": "634:87:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7887,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7743,
                    "name": "ElementaryTypeName",
                    "src": "885:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7742,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7744,
                    "name": "UserDefinedTypeName",
                    "src": "896:8:6"
                  }
                ],
                "id": 7745,
                "name": "Mapping",
                "src": "877:28:6"
              }
            ],
            "id": 7746,
            "name": "VariableDeclaration",
            "src": "877:38:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionTotal",
              "scope": 7887,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7747,
                "name": "ElementaryTypeName",
                "src": "921:7:6"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 7748,
                "name": "Literal",
                "src": "945:1:6"
              }
            ],
            "id": 7749,
            "name": "VariableDeclaration",
            "src": "921:25:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "newSolutionIndex",
                      "scope": 7755,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7750,
                        "name": "ElementaryTypeName",
                        "src": "1034:7:6"
                      }
                    ],
                    "id": 7751,
                    "name": "VariableDeclaration",
                    "src": "1034:24:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "newSolutionAddress",
                      "scope": 7755,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7752,
                        "name": "ElementaryTypeName",
                        "src": "1060:7:6"
                      }
                    ],
                    "id": 7753,
                    "name": "VariableDeclaration",
                    "src": "1060:26:6"
                  }
                ],
                "id": 7754,
                "name": "ParameterList",
                "src": "1033:54:6"
              }
            ],
            "id": 7755,
            "name": "EventDefinition",
            "src": "1014:74:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7887,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7775,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7756,
                        "name": "ElementaryTypeName",
                        "src": "1190:7:6"
                      }
                    ],
                    "id": 7757,
                    "name": "VariableDeclaration",
                    "src": "1190:23:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7775,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7758,
                        "name": "ElementaryTypeName",
                        "src": "1215:6:6"
                      }
                    ],
                    "id": 7759,
                    "name": "VariableDeclaration",
                    "src": "1215:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7775,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7760,
                        "name": "ElementaryTypeName",
                        "src": "1235:6:6"
                      }
                    ],
                    "id": 7761,
                    "name": "VariableDeclaration",
                    "src": "1235:20:6"
                  }
                ],
                "id": 7762,
                "name": "ParameterList",
                "src": "1189:67:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7767,
                "name": "ParameterList",
                "src": "1301:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1460,
                      "type": "type(contract ERC721MintableComplete)",
                      "value": "ERC721MintableComplete"
                    },
                    "id": 7763,
                    "name": "Identifier",
                    "src": "1257:22:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7759,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7764,
                    "name": "Identifier",
                    "src": "1280:4:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7761,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7765,
                    "name": "Identifier",
                    "src": "1286:6:6"
                  }
                ],
                "id": 7766,
                "name": "ModifierInvocation",
                "src": "1257:36:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7737,
                              "type": "contract Verifier",
                              "value": "verifier"
                            },
                            "id": 7768,
                            "name": "Identifier",
                            "src": "1311:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8809,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7769,
                                "name": "Identifier",
                                "src": "1322:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7757,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7770,
                                "name": "Identifier",
                                "src": "1331:15:6"
                              }
                            ],
                            "id": 7771,
                            "name": "FunctionCall",
                            "src": "1322:25:6"
                          }
                        ],
                        "id": 7772,
                        "name": "Assignment",
                        "src": "1311:36:6"
                      }
                    ],
                    "id": 7773,
                    "name": "ExpressionStatement",
                    "src": "1311:36:6"
                  }
                ],
                "id": 7774,
                "name": "Block",
                "src": "1301:53:6"
              }
            ],
            "id": 7775,
            "name": "FunctionDefinition",
            "src": "1178:176:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7887,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solutionKey",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7776,
                        "name": "ElementaryTypeName",
                        "src": "1381:7:6"
                      }
                    ],
                    "id": 7777,
                    "name": "VariableDeclaration",
                    "src": "1381:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "solutionAddress",
                      "scope": 7811,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7778,
                        "name": "ElementaryTypeName",
                        "src": "1402:7:6"
                      }
                    ],
                    "id": 7779,
                    "name": "VariableDeclaration",
                    "src": "1402:23:6"
                  }
                ],
                "id": 7780,
                "name": "ParameterList",
                "src": "1380:46:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7781,
                "name": "ParameterList",
                "src": "1434:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "solutionIndex",
                              "referencedDeclaration": 7739,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7746,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7782,
                                    "name": "Identifier",
                                    "src": "1444:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7777,
                                      "type": "bytes32",
                                      "value": "solutionKey"
                                    },
                                    "id": 7783,
                                    "name": "Identifier",
                                    "src": "1454:11:6"
                                  }
                                ],
                                "id": 7784,
                                "name": "IndexAccess",
                                "src": "1444:22:6"
                              }
                            ],
                            "id": 7785,
                            "name": "MemberAccess",
                            "src": "1444:36:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7749,
                              "type": "uint256",
                              "value": "solutionTotal"
                            },
                            "id": 7786,
                            "name": "Identifier",
                            "src": "1483:13:6"
                          }
                        ],
                        "id": 7787,
                        "name": "Assignment",
                        "src": "1444:52:6"
                      }
                    ],
                    "id": 7788,
                    "name": "ExpressionStatement",
                    "src": "1444:52:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "solutionAddress",
                              "referencedDeclaration": 7741,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7746,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7789,
                                    "name": "Identifier",
                                    "src": "1506:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7777,
                                      "type": "bytes32",
                                      "value": "solutionKey"
                                    },
                                    "id": 7790,
                                    "name": "Identifier",
                                    "src": "1516:11:6"
                                  }
                                ],
                                "id": 7791,
                                "name": "IndexAccess",
                                "src": "1506:22:6"
                              }
                            ],
                            "id": 7792,
                            "name": "MemberAccess",
                            "src": "1506:38:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7779,
                              "type": "address",
                              "value": "solutionAddress"
                            },
                            "id": 7793,
                            "name": "Identifier",
                            "src": "1547:15:6"
                          }
                        ],
                        "id": 7794,
                        "name": "Assignment",
                        "src": "1506:56:6"
                      }
                    ],
                    "id": 7795,
                    "name": "ExpressionStatement",
                    "src": "1506:56:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7755,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1578:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "solutionIndex",
                              "referencedDeclaration": 7739,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7746,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7797,
                                    "name": "Identifier",
                                    "src": "1592:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7777,
                                      "type": "bytes32",
                                      "value": "solutionKey"
                                    },
                                    "id": 7798,
                                    "name": "Identifier",
                                    "src": "1602:11:6"
                                  }
                                ],
                                "id": 7799,
                                "name": "IndexAccess",
                                "src": "1592:22:6"
                              }
                            ],
                            "id": 7800,
                            "name": "MemberAccess",
                            "src": "1592:36:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "solutionAddress",
                              "referencedDeclaration": 7741,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7746,
                                      "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "solutions"
                                    },
                                    "id": 7801,
                                    "name": "Identifier",
                                    "src": "1630:9:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7777,
                                      "type": "bytes32",
                                      "value": "solutionKey"
                                    },
                                    "id": 7802,
                                    "name": "Identifier",
                                    "src": "1640:11:6"
                                  }
                                ],
                                "id": 7803,
                                "name": "IndexAccess",
                                "src": "1630:22:6"
                              }
                            ],
                            "id": 7804,
                            "name": "MemberAccess",
                            "src": "1630:38:6"
                          }
                        ],
                        "id": 7805,
                        "name": "FunctionCall",
                        "src": "1578:91:6"
                      }
                    ],
                    "id": 7806,
                    "name": "EmitStatement",
                    "src": "1573:96:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7749,
                              "type": "uint256",
                              "value": "solutionTotal"
                            },
                            "id": 7807,
                            "name": "Identifier",
                            "src": "1679:13:6"
                          }
                        ],
                        "id": 7808,
                        "name": "UnaryOperation",
                        "src": "1679:15:6"
                      }
                    ],
                    "id": 7809,
                    "name": "ExpressionStatement",
                    "src": "1679:15:6"
                  }
                ],
                "id": 7810,
                "name": "Block",
                "src": "1434:267:6"
              }
            ],
            "id": 7811,
            "name": "FunctionDefinition",
            "src": "1360:341:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7887,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "1942:7:6"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "1942:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7814,
                        "name": "ElementaryTypeName",
                        "src": "1954:7:6"
                      }
                    ],
                    "id": 7815,
                    "name": "VariableDeclaration",
                    "src": "1954:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 8483,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7816,
                        "name": "UserDefinedTypeName",
                        "src": "1971:14:6"
                      }
                    ],
                    "id": 7817,
                    "name": "VariableDeclaration",
                    "src": "1971:27:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7818,
                            "name": "ElementaryTypeName",
                            "src": "2000:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7819,
                            "name": "Literal",
                            "src": "2005:1:6"
                          }
                        ],
                        "id": 7820,
                        "name": "ArrayTypeName",
                        "src": "2000:7:6"
                      }
                    ],
                    "id": 7821,
                    "name": "VariableDeclaration",
                    "src": "2000:20:6"
                  }
                ],
                "id": 7822,
                "name": "ParameterList",
                "src": "1941:80:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7823,
                "name": "ParameterList",
                "src": "2029:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7825
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solutionKey",
                          "scope": 7885,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7824,
                            "name": "ElementaryTypeName",
                            "src": "2039:7:6"
                          }
                        ],
                        "id": 7825,
                        "name": "VariableDeclaration",
                        "src": "2039:19:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8818,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7826,
                            "name": "Identifier",
                            "src": "2061:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8811,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7827,
                                    "name": "Identifier",
                                    "src": "2071:3:6"
                                  }
                                ],
                                "id": 7828,
                                "name": "MemberAccess",
                                "src": "2071:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7892,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8478,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7829,
                                        "name": "Identifier",
                                        "src": "2088:5:6"
                                      }
                                    ],
                                    "id": 7830,
                                    "name": "MemberAccess",
                                    "src": "2088:7:6"
                                  }
                                ],
                                "id": 7831,
                                "name": "MemberAccess",
                                "src": "2088:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7894,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "a",
                                      "referencedDeclaration": 8478,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7832,
                                        "name": "Identifier",
                                        "src": "2099:5:6"
                                      }
                                    ],
                                    "id": 7833,
                                    "name": "MemberAccess",
                                    "src": "2099:7:6"
                                  }
                                ],
                                "id": 7834,
                                "name": "MemberAccess",
                                "src": "2099:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7899,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8480,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7835,
                                        "name": "Identifier",
                                        "src": "2110:5:6"
                                      }
                                    ],
                                    "id": 7836,
                                    "name": "MemberAccess",
                                    "src": "2110:7:6"
                                  }
                                ],
                                "id": 7837,
                                "name": "MemberAccess",
                                "src": "2110:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7903,
                                  "type": "uint256[2] memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "b",
                                      "referencedDeclaration": 8480,
                                      "type": "struct Pairing.G2Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7838,
                                        "name": "Identifier",
                                        "src": "2121:5:6"
                                      }
                                    ],
                                    "id": 7839,
                                    "name": "MemberAccess",
                                    "src": "2121:7:6"
                                  }
                                ],
                                "id": 7840,
                                "name": "MemberAccess",
                                "src": "2121:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "X",
                                  "referencedDeclaration": 7892,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8482,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7841,
                                        "name": "Identifier",
                                        "src": "2132:5:6"
                                      }
                                    ],
                                    "id": 7842,
                                    "name": "MemberAccess",
                                    "src": "2132:7:6"
                                  }
                                ],
                                "id": 7843,
                                "name": "MemberAccess",
                                "src": "2132:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "Y",
                                  "referencedDeclaration": 7894,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "c",
                                      "referencedDeclaration": 8482,
                                      "type": "struct Pairing.G1Point memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7817,
                                          "type": "struct Verifier.Proof memory",
                                          "value": "proof"
                                        },
                                        "id": 7844,
                                        "name": "Identifier",
                                        "src": "2143:5:6"
                                      }
                                    ],
                                    "id": 7845,
                                    "name": "MemberAccess",
                                    "src": "2143:7:6"
                                  }
                                ],
                                "id": 7846,
                                "name": "MemberAccess",
                                "src": "2143:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7821,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7847,
                                "name": "Identifier",
                                "src": "2154:5:6"
                              }
                            ],
                            "id": 7848,
                            "name": "FunctionCall",
                            "src": "2071:89:6"
                          }
                        ],
                        "id": 7849,
                        "name": "FunctionCall",
                        "src": "2061:100:6"
                      }
                    ],
                    "id": 7850,
                    "name": "VariableDeclarationStatement",
                    "src": "2039:122:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_498956fa9670977d71824a1dd58600dae343a9fd8526784b1daad7a0fab9cf8f",
                                  "typeString": "literal_string \"Solution already used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8827,
                                8828
                              ],
                              "referencedDeclaration": 8828,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7851,
                            "name": "Identifier",
                            "src": "2171:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "solutionAddress",
                                  "referencedDeclaration": 7741,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7746,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7852,
                                        "name": "Identifier",
                                        "src": "2179:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7825,
                                          "type": "bytes32",
                                          "value": "solutionKey"
                                        },
                                        "id": 7853,
                                        "name": "Identifier",
                                        "src": "2189:11:6"
                                      }
                                    ],
                                    "id": 7854,
                                    "name": "IndexAccess",
                                    "src": "2179:22:6"
                                  }
                                ],
                                "id": 7855,
                                "name": "MemberAccess",
                                "src": "2179:38:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7856,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2221:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "307830",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0x0"
                                    },
                                    "id": 7857,
                                    "name": "Literal",
                                    "src": "2229:3:6"
                                  }
                                ],
                                "id": 7858,
                                "name": "FunctionCall",
                                "src": "2221:12:6"
                              }
                            ],
                            "id": 7859,
                            "name": "BinaryOperation",
                            "src": "2179:54:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c72656164792075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already used\"",
                              "value": "Solution already used"
                            },
                            "id": 7860,
                            "name": "Literal",
                            "src": "2235:23:6"
                          }
                        ],
                        "id": 7861,
                        "name": "FunctionCall",
                        "src": "2171:88:6"
                      }
                    ],
                    "id": 7862,
                    "name": "ExpressionStatement",
                    "src": "2171:88:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Proof_$8483_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "verifyTx",
                              "referencedDeclaration": 8808,
                              "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7737,
                                  "type": "contract Verifier",
                                  "value": "verifier"
                                },
                                "id": 7863,
                                "name": "Identifier",
                                "src": "2282:8:6"
                              }
                            ],
                            "id": 7864,
                            "name": "MemberAccess",
                            "src": "2282:17:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7817,
                              "type": "struct Verifier.Proof memory",
                              "value": "proof"
                            },
                            "id": 7865,
                            "name": "Identifier",
                            "src": "2300:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7821,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7866,
                            "name": "Identifier",
                            "src": "2307:5:6"
                          }
                        ],
                        "id": 7867,
                        "name": "FunctionCall",
                        "src": "2282:31:6"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7811,
                                      "type": "function (bytes32,address)",
                                      "value": "addSolution"
                                    },
                                    "id": 7868,
                                    "name": "Identifier",
                                    "src": "2329:11:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7825,
                                      "type": "bytes32",
                                      "value": "solutionKey"
                                    },
                                    "id": 7869,
                                    "name": "Identifier",
                                    "src": "2341:11:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 8824,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 7870,
                                        "name": "Identifier",
                                        "src": "2354:3:6"
                                      }
                                    ],
                                    "id": 7871,
                                    "name": "MemberAccess",
                                    "src": "2354:10:6"
                                  }
                                ],
                                "id": 7872,
                                "name": "FunctionCall",
                                "src": "2329:36:6"
                              }
                            ],
                            "id": 7873,
                            "name": "ExpressionStatement",
                            "src": "2329:36:6"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        7886,
                                        1459
                                      ],
                                      "referencedDeclaration": 1459,
                                      "type": "function (address,uint256) returns (bool)",
                                      "value": "mint"
                                    },
                                    "id": 7874,
                                    "name": "Identifier",
                                    "src": "2379:4:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7813,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 7875,
                                    "name": "Identifier",
                                    "src": "2384:2:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7815,
                                      "type": "uint256",
                                      "value": "tokenId"
                                    },
                                    "id": 7876,
                                    "name": "Identifier",
                                    "src": "2388:7:6"
                                  }
                                ],
                                "id": 7877,
                                "name": "FunctionCall",
                                "src": "2379:17:6"
                              }
                            ],
                            "id": 7878,
                            "name": "ExpressionStatement",
                            "src": "2379:17:6"
                          }
                        ],
                        "id": 7879,
                        "name": "Block",
                        "src": "2315:92:6"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_4e668642965b9d582ea460f29c12bdbb5d65fe58c2cabbeb6244cd04115db366",
                                      "typeString": "literal_string \"Proof wasn't verified\""
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    8829,
                                    8830
                                  ],
                                  "referencedDeclaration": 8830,
                                  "type": "function (string memory) pure",
                                  "value": "revert"
                                },
                                "id": 7880,
                                "name": "Identifier",
                                "src": "2413:6:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "50726f6f66207761736e2774207665726966696564",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"Proof wasn't verified\"",
                                  "value": "Proof wasn't verified"
                                },
                                "id": 7881,
                                "name": "Literal",
                                "src": "2420:23:6"
                              }
                            ],
                            "id": 7882,
                            "name": "FunctionCall",
                            "src": "2413:31:6"
                          }
                        ],
                        "id": 7883,
                        "name": "ExpressionStatement",
                        "src": "2413:31:6"
                      }
                    ],
                    "id": 7884,
                    "name": "IfStatement",
                    "src": "2278:166:6"
                  }
                ],
                "id": 7885,
                "name": "Block",
                "src": "2029:432:6"
              }
            ],
            "id": 7886,
            "name": "FunctionDefinition",
            "src": "1928:533:6"
          }
        ],
        "id": 7887,
        "name": "ContractDefinition",
        "src": "468:1995:6"
      }
    ],
    "id": 7888,
    "name": "SourceUnit",
    "src": "0:2463:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-09T04:08:38.202Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}